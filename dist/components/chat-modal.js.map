{"file":"chat-modal.js","mappings":"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","names":["ChatModal","__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/chat-modal/chat-modal.css?tag=chat-modal&encapsulation=shadow","src/components/chat-modal/chat-modal.tsx"],"sourcesContent":[":host {\n  font-family: 'Yantramanav', serif, Arial, sans-serif;\n  line-height: 1.5;\n  font-weight: 400;\n  --main-color: #ff8834;\n}\n\np {\n  all: unset;\n}\n\nbutton {\n  font-family: 'Signika', serif, Arial, sans-serif;\n}\n\ninput {\n  font-family: 'Yantramanav', serif, Arial, sans-serif;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n  opacity: 0;\n  visibility: hidden;\n  transition: opacity 0.3s ease, visibility 0.3s ease;\n}\n\n.modal-overlay.visible {\n  opacity: 1;\n  visibility: visible;\n}\n\n.chat-container {\n  width: 90vw;\n  height: 90vh;\n  max-width: 1200px;\n  max-height: 800px;\n  background: white;\n  border-radius: 12px;\n  display: flex;\n  flex-direction: column;\n  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);\n  position: relative;\n  transform: scale(0.8);\n  transition: transform 0.3s ease;\n}\n\n.modal-overlay.visible .chat-container {\n  transform: scale(1);\n}\n\n.modal-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 20px 30px;\n  border-bottom: 1px solid #eee;\n  background: linear-gradient(135deg, var(--main-color), #ff8834);\n  color: white;\n  border-radius: 12px 12px 0 0;\n}\n\n.modal-title {\n  font-family: 'Signika', Arial, sans-serif;\n  font-size: 1.25rem;\n  font-weight: 600;\n  margin: 0;\n}\n\n.close-button {\n  background: none;\n  border: none;\n  color: white;\n  font-size: 1.5rem;\n  cursor: pointer;\n  padding: 8px;\n  border-radius: 50%;\n  width: 40px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: background-color 0.2s ease;\n}\n\n.close-button:hover {\n  background-color: rgba(255, 255, 255, 0.2);\n}\n\n.chat-content {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  padding: 30px;\n  min-height: 0;\n}\n\n.message-container {\n  flex: 1;\n  overflow-y: auto;\n  margin-bottom: 20px;\n  padding: 20px;\n  border: 1px solid #eee;\n  border-radius: 8px;\n  min-height: 300px;\n}\n\n.message {\n  margin: 12px 0;\n  padding: 12px 16px;\n  border-radius: 12px;\n  max-width: 80%;\n  word-wrap: break-word;\n  line-height: 1.4;\n}\n\n.user-message {\n  background: linear-gradient(135deg, var(--main-color), #ff8834);\n  color: white;\n  margin-left: auto;\n  width: fit-content;\n  border-radius: 20px 20px 0px 20px;\n}\n\n.ai-message {\n  background: hsla(240, 6%, 90%, 0.5);\n  color: #333;\n  margin-right: auto;\n  width: fit-content;\n  border-radius: 20px 20px 20px 0px;\n}\n\n.input-container {\n  display: flex;\n  gap: 12px;\n  align-items: center;\n  background: white;\n  padding: 16px;\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n}\n\ninput {\n  flex: 1;\n  padding: 12px 16px;\n  border: 1px solid #ddd;\n  border-radius: 6px;\n  font-size: 1rem;\n  outline: none;\n  transition: border-color 0.2s ease;\n}\n\ninput:focus {\n  border-color: var(--main-color);\n  box-shadow: 0 0 0 2px rgba(236, 102, 7, 0.1);\n}\n\nbutton {\n  padding: 12px 24px;\n  background: linear-gradient(135deg, var(--main-color), #ff8834);\n  color: white;\n  border: none;\n  border-radius: 6px;\n  cursor: pointer;\n  font-size: 1rem;\n  font-weight: 600;\n  transition: transform 0.2s ease, box-shadow 0.2s ease;\n}\n\nbutton:hover:not(:disabled) {\n  transform: translateY(-1px);\n  box-shadow: 0 4px 12px rgba(236, 102, 7, 0.3);\n}\n\nbutton:disabled {\n  background: #cccccc;\n  cursor: not-allowed;\n  transform: none;\n  box-shadow: none;\n}\n\n.typing-indicator {\n  display: none;\n  margin: 12px 0;\n  max-width: 80%;\n  margin-right: auto;\n}\n\n.typing-indicator.active {\n  display: block;\n}\n\n/* Skeleton integration styles */\n.typing-indicator .skeleton-container {\n  margin: 0;\n  background: transparent;\n  border: none;\n  padding: 12px 16px;\n}\n\n.typing-indicator .skeleton-wrapper {\n  gap: 8px;\n}\n\n.typing-indicator .skeleton-avatar {\n  width: 24px;\n  height: 24px;\n  margin-bottom: 0;\n}\n\n.typing-indicator .skeleton-line {\n  height: 12px;\n}\n\n.typing-indicator .skeleton-typing {\n  margin-top: 4px;\n}\n\n/* Scrollbar styling */\n.message-container::-webkit-scrollbar {\n  width: 8px;\n}\n\n.message-container::-webkit-scrollbar-track {\n  background: #f1f1f1;\n  border-radius: 4px;\n}\n\n.message-container::-webkit-scrollbar-thumb {\n  background: #c1c1c1;\n  border-radius: 4px;\n}\n\n.message-container::-webkit-scrollbar-thumb:hover {\n  background: #a1a1a1;\n}\n\n/* Responsive design */\n@media (max-width: 768px) {\n  .chat-container {\n    width: 95vw;\n    height: 95vh;\n    border-radius: 8px;\n  }\n\n  .modal-header {\n    padding: 15px 20px;\n  }\n\n  .modal-title {\n    font-size: 1.25rem;\n  }\n\n  .chat-content {\n    padding: 20px;\n  }\n\n  .message {\n    max-width: 90%;\n    padding: 10px 12px;\n  }\n\n  .input-container {\n    padding: 12px;\n    gap: 8px;\n  }\n\n  input {\n    padding: 10px 12px;\n  }\n\n  button {\n    padding: 10px 16px;\n  }\n}\n\n.ai-feedback-buttons {\n  display: flex;\n  gap: 8px;\n  margin-top: 8px;\n  align-items: center;\n}\n\n.ai-feedback-buttons button {\n  all: unset;\n  cursor: pointer;\n}\n\n.ai-feedback-buttons button:hover {\n  all: unset;\n  cursor: pointer;\n}\n\n.thumb-up,\n.thumb-down {\n  width: 16px;\n  height: 16px;\n}\n\n/* Skeleton */\n\n@keyframes shimmer {\n  0% {\n    background-position: -200px 0;\n  }\n  100% {\n    background-position: calc(200px + 100%) 0;\n  }\n}\n\n.skeleton-container {\n  position: relative;\n}\n\n.skeleton-line {\n  height: 14px;\n  background: linear-gradient(90deg, #e9ecef 25%, #f8f9fa 50%, #e9ecef 75%);\n  background-size: 200px 100%;\n  animation: shimmer 1.5s infinite linear;\n  border-radius: 4px;\n  margin-bottom: 8px;\n  position: relative;\n  overflow: hidden;\n}\n\n.skeleton-line:last-child {\n  margin-bottom: 0;\n}\n\n.skeleton-line.line-1 {\n  width: 95%;\n}\n\n.skeleton-line.line-2 {\n  width: 88%;\n}\n\n.skeleton-line.line-3 {\n  width: 72%;\n}\n\n.skeleton-avatar {\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  background: linear-gradient(90deg, #e9ecef 25%, #f8f9fa 50%, #e9ecef 75%);\n  background-size: 200px 100%;\n  animation: shimmer 1.5s infinite linear;\n  margin-bottom: 12px;\n  display: inline-block;\n}\n\n.skeleton-wrapper {\n  display: flex;\n  align-items: flex-start;\n  gap: 12px;\n}\n\n.skeleton-content {\n  flex: 1;\n}\n\n.skeleton-typing {\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  margin-top: 8px;\n}\n\n.skeleton-dot {\n  width: 6px;\n  height: 6px;\n  border-radius: 50%;\n  background-color: #6c757d;\n  animation: typing 1.4s infinite ease-in-out;\n}\n\n.skeleton-dot:nth-child(1) {\n  animation-delay: -0.32s;\n}\n.skeleton-dot:nth-child(2) {\n  animation-delay: -0.16s;\n}\n.skeleton-dot:nth-child(3) {\n  animation-delay: 0s;\n}\n\n@keyframes typing {\n  0%,\n  80%,\n  100% {\n    opacity: 0.3;\n    transform: scale(0.8);\n  }\n  40% {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n\n.skeleton-glow {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.4), transparent);\n  animation: glow 2s infinite;\n  border-radius: inherit;\n}\n\n@keyframes glow {\n  0% {\n    transform: translateX(-100%);\n  }\n  100% {\n    transform: translateX(100%);\n  }\n}\n","import { Component, Host, h, State, Prop, Env } from '@stencil/core';\nimport { TitleStyle } from './types';\nimport { generateConversationId } from '../../utils/utils';\nimport { callAIStream } from '../../utils/api-service';\n\n@Component({\n  tag: 'chat-modal',\n  styleUrl: 'chat-modal.css',\n  shadow: true,\n})\nexport class ChatModal {\n  @State() open = true;\n  @Prop() modalTitle: string = \"Que puis-je faire pour vous ?\";\n  @Prop() titleStyle: Partial<TitleStyle> = {};\n  @State() messages: { role: string; content: string; isComplete?: boolean }[] = [];\n  @State() isLoading: boolean = false;\n  @Prop() iconSize: number = 16;\n  @Prop() apiEndpoint: string = Env.API_URL;\n  @State() conversationId: string = '';\n\n  componentWillLoad() {\n    // Initialize conversation ID when component first loads\n    this.conversationId = generateConversationId();\n    console.log('Generated conversation ID:', this.conversationId);\n    this.loadFonts();\n  }\n\n  private loadFonts() {\n    // Check if fonts are already loaded to avoid duplicates\n    const existingLink = document.querySelector('link[href*=\"fonts.googleapis.com/css2?family=Signika\"]');\n    if (!existingLink) {\n      const link = document.createElement('link');\n      link.rel = 'stylesheet';\n      link.href = 'https://fonts.googleapis.com/css2?family=Signika:wght@300..700&family=Yantramanav:wght@100;300;400;500;700;900&display=swap';\n      document.head.appendChild(link);\n    }\n  }\n\n  private closeModal = () => {\n    this.open = false;\n  };\n\n  private handleChunk = async (message: string) => {\n    try {\n      const aiMessageIndex = this.messages.length - 1; // The AI message we just added\n\n      await callAIStream(\n        message,\n        this.apiEndpoint,\n        this.conversationId,\n        (chunk: string) => {\n          this.messages = this.messages.map((msg, index) =>\n            index === aiMessageIndex\n              ? { ...msg, content: msg.content + chunk }\n              : msg\n          );\n        },\n        () => {\n          this.messages = this.messages.map((msg, index) =>\n            index === aiMessageIndex\n              ? { ...msg, isComplete: true }\n              : msg\n          );\n          this.isLoading = false;\n        },\n        (error: Error) => {\n          console.error('AI stream error:', error);\n          this.messages = this.messages.map((msg, index) =>\n            index === aiMessageIndex\n              ? { ...msg, content: 'Sorry, I encountered an error. Please try again.', isComplete: true }\n              : msg\n          );\n          this.isLoading = false;\n        }\n      );\n    } catch (error) {\n      console.error('Failed to call AI stream:', error);\n      const aiMessageIndex = this.messages.length - 1;\n      this.messages = this.messages.map((msg, index) =>\n        index === aiMessageIndex\n          ? { ...msg, content: 'Sorry, I encountered an error. Please try again.', isComplete: true }\n          : msg\n      );\n      this.isLoading = false;\n    }\n  };\n\n  private handleSubmit = async (e: Event) => {\n    e.preventDefault();\n    const form = e.target as HTMLFormElement;\n    const input = form.querySelector('input[name=\"message\"]') as HTMLInputElement;\n    const message = input.value;\n    this.messages.push({ role: 'user', content: message });\n    this.isLoading = true;\n    form.reset();\n    this.messages.push({ role: 'ai', content: '' });\n    await this.handleChunk(message);\n  };\n\n  render() {\n    return (\n      <Host>\n        <div class={{ 'modal-overlay': true, visible: this.open }}>\n          <div class=\"chat-container\">\n            <div class=\"modal-header\">\n              <span class=\"modal-title\">{this.modalTitle}</span>\n              <button class=\"close-button\" onClick={this.closeModal} aria-label=\"Close\">&times;</button>\n            </div>\n            <div class=\"chat-content\">\n              <div class=\"message-container\">\n                {this.messages.map((message, index) => (\n                  <div\n                    key={index}\n                    class={{\n                      'message': true,\n                      'user-message': message.role === 'user',\n                      'ai-message': message.role === 'ai',\n                    }}\n                  >\n                    {message.role === 'ai' ? (\n                      <>\n                        {this.isLoading && message.content === '' ? (\n                          <chat-skeleton />\n                        ) : message.content}\n                        {message.isComplete && <satisfaction-buttons />}\n                      </>\n                    ) : (\n                      <p>{message.content}</p>\n                    )}\n                  </div>\n                ))}\n              </div>\n              <form class=\"input-container\" onSubmit={this.handleSubmit}>\n                <input\n                  name='message'\n                  type='text'\n                  placeholder='Tapez votre message ici...'\n                  disabled={this.isLoading}\n                />\n                <button\n                  type='submit'\n                  disabled={this.isLoading}\n                  class=\"send-button\"\n                >\n                  {this.isLoading ? 'Envoi...' : <svg xmlns=\"http://www.w3.org/2000/svg\" width={this.iconSize} height={this.iconSize} viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-send-horizontal-icon lucide-send-horizontal\"><path d=\"M3.714 3.048a.498.498 0 0 0-.683.627l2.843 7.627a2 2 0 0 1 0 1.396l-2.842 7.627a.498.498 0 0 0 .682.627l18-8.5a.5.5 0 0 0 0-.904z\" /><path d=\"M6 12h16\" /></svg>}\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"version":3}