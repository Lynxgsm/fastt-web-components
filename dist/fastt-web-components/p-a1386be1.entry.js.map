{"version":3,"names":["generateConversationId","timestamp","Date","now","random","Math","toString","substring","async","callAIStream","message","apiEndpoint","conversationId","onChunk","onComplete","onError","response","fetch","method","headers","Accept","body","JSON","stringify","prompt","conversation_id","ok","Error","status","statusText","reader","getReader","decoder","TextDecoder","partial","done","value","read","decode","lines","split","line","startsWith","data","slice","parsed","parse","content","e","trim","stream","pop","error","getDefaults","baseUrl","breaks","extensions","gfm","headerIds","headerPrefix","highlight","hooks","langPrefix","mangle","pedantic","renderer","sanitize","sanitizer","silent","smartypants","tokenizer","walkTokens","xhtml","defaults","changeDefaults","newDefaults","escapeTest","escapeReplace","RegExp","source","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","escape","html","encode","test","replace","unescapeTest","unescape","_","n","toLowerCase","charAt","String","fromCharCode","parseInt","caret","edit","regex","opt","obj","name","val","getRegex","nonWordAndColonTest","originIndependentUrl","cleanUrl","base","href","prot","decodeURIComponent","indexOf","resolveUrl","encodeURI","baseUrls","justDomain","protocol","domain","rtrim","relativeBase","noopTest","exec","splitCells","tableRow","count","row","match","offset","str","escaped","curr","cells","i","shift","length","splice","push","c","invert","l","suffLen","currChar","findClosingBracket","b","level","checkSanitizeDeprecation","console","warn","repeatString","pattern","result","outputLink","cap","link","raw","lexer","title","text","state","inLink","token","type","tokens","inlineTokens","indentCodeCompensation","matchIndentToCode","indentToCode","map","node","matchIndentInNode","indentInNode","join","Tokenizer","constructor","options","this","space","src","rules","block","newline","code","codeBlockStyle","fences","lang","inline","_escapes","heading","trimmed","depth","hr","blockquote","top","blockTokens","list","istask","ischecked","indent","blankLine","endsWithBlankLine","nextLine","rawLine","itemContents","endEarly","bull","isordered","ordered","start","loose","items","itemRegex","t","repeat","trimLeft","search","nextBulletRegex","min","hrRegex","fencesBeginRegex","headingBeginRegex","task","checked","trimRight","spacers","filter","hasMultipleLineBreaks","some","pre","def","tag","table","item","header","align","rows","j","k","lheading","paragraph","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","linkLen","reflink","links","nolink","emStrong","maskedSrc","prevChar","lDelim","nextChar","punctuation","lLength","rDelim","rLength","delimTotal","midDelimTotal","endReg","rDelimAst","rDelimUnd","lastIndex","index","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","br","del","autolink","url","prevCapZero","_backpedal","inlineText","_paragraph","_label","_title","bullet","listItemStart","_tag","_comment","normal","reflinkSearch","_punctuation","blockSkip","escapedEmSt","_scheme","_email","_attribute","_href","strong","middle","endAst","endUnd","em","_extended_email","out","charCodeAt","Lexer","Object","create","inlineQueue","lex","lexInline","next","leading","tabs","lastToken","cutSrc","lastParagraphClipped","extTokenizer","call","startBlock","startIndex","Infinity","tempSrc","tempStart","forEach","getStartIndex","errMsg","keepPrevChar","keys","includes","lastIndexOf","startInline","Renderer","infostring","quote","slugger","id","slug","startatt","listitem","checkbox","tablerow","tablecell","flags","image","TextRenderer","Slugger","seen","serialize","getNextSafeSlug","originalSlug","isDryRun","occurenceAccumulator","hasOwnProperty","dryrun","Parser","textRenderer","parser","parseInline","l2","l3","cell","itemBody","ret","renderers","unshift","Hooks","static","Set","preprocess","markdown","postprocess","callback","msg","Promise","resolve","reject","parseMarkdown","origOpt","marked","throwError","prototype","err","pending","setTimeout","then","all","catch","setOptions","use","args","childTokens","pack","opts","ext","prevRenderer","apply","prop","prevTokenizer","prevHook","passThroughHooks","has","arg","values","concat","chatModalCss","ChatModal","open","modalTitle","titleStyle","messages","isLoading","iconSize","Env","API_URL","componentWillLoad","log","loadFonts","existingLink","document","querySelector","createElement","rel","head","appendChild","closeModal","handleChunk","aiMessageIndex","chunk","isComplete","handleSubmit","preventDefault","form","target","input","role","reset","renderMarkdown","sanitizedContent","render","h","Host","key","class","visible","onClick","Fragment","innerHTML","onSubmit","placeholder","disabled","xmlns","width","height","viewBox","fill","stroke","d","chatSkeletonCss","ChatSkeleton","chatWidgetCss","ChatWidget","isChatContainerVisible","inputEl","userMessage","newMessages","toggleChatContainer","setInputRef","el","hide","required","ref","x1","y1","x2","y2","points","satisfactionButtonsCss","SatisfactionButtons"],"sources":["src/utils/utils.ts","src/utils/api-service.ts","node_modules/marked/lib/marked.esm.js","src/components/chat-modal/chat-modal.css?tag=chat-modal&encapsulation=shadow","src/components/chat-modal/chat-modal.tsx","src/components/chat-skeleton/chat-skeleton.css?tag=chat-skeleton&encapsulation=shadow","src/components/chat-skeleton/chat-skeleton.tsx","src/components/chat-widget/chat-widget.css?tag=chat-widget&encapsulation=shadow","src/components/chat-widget/chat-widget.tsx","src/components/satisfaction-buttons/satisfaction-buttons.css?tag=satisfaction-buttons&encapsulation=shadow","src/components/satisfaction-buttons/satisfaction-buttons.tsx"],"sourcesContent":["/**\n * Generates a unique conversation ID\n * @returns A unique string identifier for conversations\n */\nexport function generateConversationId(): string {\n  const timestamp = Date.now();\n  const random = Math.random().toString(36).substring(2, 15);\n  return `conv_${timestamp}_${random}`;\n}\n","export async function callAIStream(\n  message: string,\n  apiEndpoint: string,\n  conversationId: string,\n  onChunk: (chunk: string) => void,\n  onComplete?: () => void,\n  onError?: (error: Error) => void,\n): Promise<void> {\n  try {\n    const response = await fetch(`${apiEndpoint}/conversation/stream`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'text/event-stream',\n        'Cache-Control': 'no-cache',\n      },\n      body: JSON.stringify({\n        prompt: message,\n        conversation_id: conversationId,\n      }),\n    });\n\n    if (!response.ok) {\n      throw new Error(`API request failed: ${response.status} ${response.statusText}`);\n    }\n\n    const reader = response.body?.getReader();\n    const decoder = new TextDecoder();\n    let partial = '';\n\n    if (!reader) {\n      throw new Error('Failed to get response reader');\n    }\n\n    while (true) {\n      const { done, value } = await reader.read();\n\n      if (done) {\n        partial += decoder.decode();\n\n        const lines = partial.split('\\n');\n        for (const line of lines) {\n          if (line.startsWith('data: ')) {\n            const data = line.slice(6);\n            if (data === '[DONE]') {\n              onComplete?.();\n              return;\n            }\n            try {\n              const parsed = JSON.parse(data);\n              if (parsed.content) {\n                onChunk(parsed.content);\n              }\n            } catch (e) {\n              if (data.trim()) {\n                onChunk(data);\n              }\n            }\n          }\n        }\n        onComplete?.();\n        break;\n      }\n\n      partial += decoder.decode(value, { stream: true });\n      let lines = partial.split('\\n');\n      // Keep the last line in 'partial' in case it's incomplete\n      partial = lines.pop() || '';\n      for (const line of lines) {\n        if (line.startsWith('data: ')) {\n          const data = line.slice(6);\n          if (data === '[DONE]') {\n            onComplete?.();\n            return;\n          }\n          try {\n            const parsed = JSON.parse(data);\n            if (parsed.content) {\n              onChunk(parsed.content);\n            }\n          } catch (e) {\n            if (data.trim()) {\n              onChunk(data);\n            }\n          }\n        }\n      }\n    }\n  } catch (error) {\n    onError?.(error as Error);\n  }\n}\n","/**\n * marked v4.3.0 - a markdown parser\n * Copyright (c) 2011-2023, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\nfunction getDefaults() {\n  return {\n    async: false,\n    baseUrl: null,\n    breaks: false,\n    extensions: null,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    hooks: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: null,\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartypants: false,\n    tokenizer: null,\n    walkTokens: null,\n    xhtml: false\n  };\n}\n\nlet defaults = getDefaults();\n\nfunction changeDefaults(newDefaults) {\n  defaults = newDefaults;\n}\n\n/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = new RegExp(escapeTest.source, 'g');\nconst escapeTestNoEncode = /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/;\nconst escapeReplaceNoEncode = new RegExp(escapeTestNoEncode.source, 'g');\nconst escapeReplacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape(html, encode) {\n  if (encode) {\n    if (escapeTest.test(html)) {\n      return html.replace(escapeReplace, getEscapeReplacement);\n    }\n  } else {\n    if (escapeTestNoEncode.test(html)) {\n      return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n    }\n  }\n\n  return html;\n}\n\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\n/**\n * @param {string} html\n */\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(unescapeTest, (_, n) => {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nconst caret = /(^|[^\\[])\\^/g;\n\n/**\n * @param {string | RegExp} regex\n * @param {string} opt\n */\nfunction edit(regex, opt) {\n  regex = typeof regex === 'string' ? regex : regex.source;\n  opt = opt || '';\n  const obj = {\n    replace: (name, val) => {\n      val = val.source || val;\n      val = val.replace(caret, '$1');\n      regex = regex.replace(name, val);\n      return obj;\n    },\n    getRegex: () => {\n      return new RegExp(regex, opt);\n    }\n  };\n  return obj;\n}\n\nconst nonWordAndColonTest = /[^\\w:]/g;\nconst originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n/**\n * @param {boolean} sanitize\n * @param {string} base\n * @param {string} href\n */\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    let prot;\n    try {\n      prot = decodeURIComponent(unescape(href))\n        .replace(nonWordAndColonTest, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nconst baseUrls = {};\nconst justDomain = /^[^:]+:\\/*[^/]*$/;\nconst protocol = /^([^:]+:)[\\s\\S]*$/;\nconst domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\n/**\n * @param {string} base\n * @param {string} href\n */\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (justDomain.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n  const relativeBase = base.indexOf(':') === -1;\n\n  if (href.substring(0, 2) === '//') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(protocol, '$1') + href;\n  } else if (href.charAt(0) === '/') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(domain, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\n\nconst noopTest = { exec: function noopTest() {} };\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n      let escaped = false,\n        curr = offset;\n      while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n    cells = row.split(/ \\|/);\n  let i = 0;\n\n  // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n  if (!cells[0].trim()) { cells.shift(); }\n  if (cells.length > 0 && !cells[cells.length - 1].trim()) { cells.pop(); }\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n/**\n * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n * /c*$/ is vulnerable to REDOS.\n *\n * @param {string} str\n * @param {string} c\n * @param {boolean} invert Remove suffix of non-c chars instead. Default falsey.\n */\nfunction rtrim(str, c, invert) {\n  const l = str.length;\n  if (l === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  let suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < l) {\n    const currChar = str.charAt(l - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.slice(0, l - suffLen);\n}\n\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  const l = str.length;\n  let level = 0,\n    i = 0;\n  for (; i < l; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nfunction checkSanitizeDeprecation(opt) {\n  if (opt && opt.sanitize && !opt.silent) {\n    console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n  }\n}\n\n// copied from https://stackoverflow.com/a/5450113/806777\n/**\n * @param {string} pattern\n * @param {number} count\n */\nfunction repeatString(pattern, count) {\n  if (count < 1) {\n    return '';\n  }\n  let result = '';\n  while (count > 1) {\n    if (count & 1) {\n      result += pattern;\n    }\n    count >>= 1;\n    pattern += pattern;\n  }\n  return result + pattern;\n}\n\nfunction outputLink(cap, link, raw, lexer) {\n  const href = link.href;\n  const title = link.title ? escape(link.title) : null;\n  const text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n  if (cap[0].charAt(0) !== '!') {\n    lexer.state.inLink = true;\n    const token = {\n      type: 'link',\n      raw,\n      href,\n      title,\n      text,\n      tokens: lexer.inlineTokens(text)\n    };\n    lexer.state.inLink = false;\n    return token;\n  }\n  return {\n    type: 'image',\n    raw,\n    href,\n    title,\n    text: escape(text)\n  };\n}\n\nfunction indentCodeCompensation(raw, text) {\n  const matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n  if (matchIndentToCode === null) {\n    return text;\n  }\n\n  const indentToCode = matchIndentToCode[1];\n\n  return text\n    .split('\\n')\n    .map(node => {\n      const matchIndentInNode = node.match(/^\\s+/);\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      const [indentInNode] = matchIndentInNode;\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    })\n    .join('\\n');\n}\n\n/**\n * Tokenizer\n */\nclass Tokenizer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  space(src) {\n    const cap = this.rules.block.newline.exec(src);\n    if (cap && cap[0].length > 0) {\n      return {\n        type: 'space',\n        raw: cap[0]\n      };\n    }\n  }\n\n  code(src) {\n    const cap = this.rules.block.code.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ {1,4}/gm, '');\n      return {\n        type: 'code',\n        raw: cap[0],\n        codeBlockStyle: 'indented',\n        text: !this.options.pedantic\n          ? rtrim(text, '\\n')\n          : text\n      };\n    }\n  }\n\n  fences(src) {\n    const cap = this.rules.block.fences.exec(src);\n    if (cap) {\n      const raw = cap[0];\n      const text = indentCodeCompensation(raw, cap[3] || '');\n\n      return {\n        type: 'code',\n        raw,\n        lang: cap[2] ? cap[2].trim().replace(this.rules.inline._escapes, '$1') : cap[2],\n        text\n      };\n    }\n  }\n\n  heading(src) {\n    const cap = this.rules.block.heading.exec(src);\n    if (cap) {\n      let text = cap[2].trim();\n\n      // remove trailing #s\n      if (/#$/.test(text)) {\n        const trimmed = rtrim(text, '#');\n        if (this.options.pedantic) {\n          text = trimmed.trim();\n        } else if (!trimmed || / $/.test(trimmed)) {\n          // CommonMark requires space before trailing #s\n          text = trimmed.trim();\n        }\n      }\n\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[1].length,\n        text,\n        tokens: this.lexer.inline(text)\n      };\n    }\n  }\n\n  hr(src) {\n    const cap = this.rules.block.hr.exec(src);\n    if (cap) {\n      return {\n        type: 'hr',\n        raw: cap[0]\n      };\n    }\n  }\n\n  blockquote(src) {\n    const cap = this.rules.block.blockquote.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ *>[ \\t]?/gm, '');\n      const top = this.lexer.state.top;\n      this.lexer.state.top = true;\n      const tokens = this.lexer.blockTokens(text);\n      this.lexer.state.top = top;\n      return {\n        type: 'blockquote',\n        raw: cap[0],\n        tokens,\n        text\n      };\n    }\n  }\n\n  list(src) {\n    let cap = this.rules.block.list.exec(src);\n    if (cap) {\n      let raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine,\n        line, nextLine, rawLine, itemContents, endEarly;\n\n      let bull = cap[1].trim();\n      const isordered = bull.length > 1;\n\n      const list = {\n        type: 'list',\n        raw: '',\n        ordered: isordered,\n        start: isordered ? +bull.slice(0, -1) : '',\n        loose: false,\n        items: []\n      };\n\n      bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n\n      if (this.options.pedantic) {\n        bull = isordered ? bull : '[*+-]';\n      }\n\n      // Get next list item\n      const itemRegex = new RegExp(`^( {0,3}${bull})((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))`);\n\n      // Check if current bullet point can start a new List Item\n      while (src) {\n        endEarly = false;\n        if (!(cap = itemRegex.exec(src))) {\n          break;\n        }\n\n        if (this.rules.block.hr.test(src)) { // End list if bullet was actually HR (possibly move into itemRegex?)\n          break;\n        }\n\n        raw = cap[0];\n        src = src.substring(raw.length);\n\n        line = cap[2].split('\\n', 1)[0].replace(/^\\t+/, (t) => ' '.repeat(3 * t.length));\n        nextLine = src.split('\\n', 1)[0];\n\n        if (this.options.pedantic) {\n          indent = 2;\n          itemContents = line.trimLeft();\n        } else {\n          indent = cap[2].search(/[^ ]/); // Find first non-space char\n          indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n          itemContents = line.slice(indent);\n          indent += cap[1].length;\n        }\n\n        blankLine = false;\n\n        if (!line && /^ *$/.test(nextLine)) { // Items begin with at most one blank line\n          raw += nextLine + '\\n';\n          src = src.substring(nextLine.length + 1);\n          endEarly = true;\n        }\n\n        if (!endEarly) {\n          const nextBulletRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])((?:[ \\t][^\\\\n]*)?(?:\\\\n|$))`);\n          const hrRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`);\n          const fencesBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\\`\\`\\`|~~~)`);\n          const headingBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`);\n\n          // Check if following lines should be included in List Item\n          while (src) {\n            rawLine = src.split('\\n', 1)[0];\n            nextLine = rawLine;\n\n            // Re-align to follow commonmark nesting rules\n            if (this.options.pedantic) {\n              nextLine = nextLine.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n            }\n\n            // End list item if found code fences\n            if (fencesBeginRegex.test(nextLine)) {\n              break;\n            }\n\n            // End list item if found start of new heading\n            if (headingBeginRegex.test(nextLine)) {\n              break;\n            }\n\n            // End list item if found start of new bullet\n            if (nextBulletRegex.test(nextLine)) {\n              break;\n            }\n\n            // Horizontal rule found\n            if (hrRegex.test(src)) {\n              break;\n            }\n\n            if (nextLine.search(/[^ ]/) >= indent || !nextLine.trim()) { // Dedent if possible\n              itemContents += '\\n' + nextLine.slice(indent);\n            } else {\n              // not enough indentation\n              if (blankLine) {\n                break;\n              }\n\n              // paragraph continuation unless last line was a different block level element\n              if (line.search(/[^ ]/) >= 4) { // indented code block\n                break;\n              }\n              if (fencesBeginRegex.test(line)) {\n                break;\n              }\n              if (headingBeginRegex.test(line)) {\n                break;\n              }\n              if (hrRegex.test(line)) {\n                break;\n              }\n\n              itemContents += '\\n' + nextLine;\n            }\n\n            if (!blankLine && !nextLine.trim()) { // Check if current line is blank\n              blankLine = true;\n            }\n\n            raw += rawLine + '\\n';\n            src = src.substring(rawLine.length + 1);\n            line = nextLine.slice(indent);\n          }\n        }\n\n        if (!list.loose) {\n          // If the previous item ended with a blank line, the list is loose\n          if (endsWithBlankLine) {\n            list.loose = true;\n          } else if (/\\n *\\n *$/.test(raw)) {\n            endsWithBlankLine = true;\n          }\n        }\n\n        // Check for task list items\n        if (this.options.gfm) {\n          istask = /^\\[[ xX]\\] /.exec(itemContents);\n          if (istask) {\n            ischecked = istask[0] !== '[ ] ';\n            itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n          }\n        }\n\n        list.items.push({\n          type: 'list_item',\n          raw,\n          task: !!istask,\n          checked: ischecked,\n          loose: false,\n          text: itemContents\n        });\n\n        list.raw += raw;\n      }\n\n      // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n      list.items[list.items.length - 1].raw = raw.trimRight();\n      list.items[list.items.length - 1].text = itemContents.trimRight();\n      list.raw = list.raw.trimRight();\n\n      const l = list.items.length;\n\n      // Item child tokens handled here at end because we needed to have the final item to trim it first\n      for (i = 0; i < l; i++) {\n        this.lexer.state.top = false;\n        list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n\n        if (!list.loose) {\n          // Check if list should be loose\n          const spacers = list.items[i].tokens.filter(t => t.type === 'space');\n          const hasMultipleLineBreaks = spacers.length > 0 && spacers.some(t => /\\n.*\\n/.test(t.raw));\n\n          list.loose = hasMultipleLineBreaks;\n        }\n      }\n\n      // Set all items to loose if list is loose\n      if (list.loose) {\n        for (i = 0; i < l; i++) {\n          list.items[i].loose = true;\n        }\n      }\n\n      return list;\n    }\n  }\n\n  html(src) {\n    const cap = this.rules.block.html.exec(src);\n    if (cap) {\n      const token = {\n        type: 'html',\n        raw: cap[0],\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      };\n      if (this.options.sanitize) {\n        const text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]);\n        token.type = 'paragraph';\n        token.text = text;\n        token.tokens = this.lexer.inline(text);\n      }\n      return token;\n    }\n  }\n\n  def(src) {\n    const cap = this.rules.block.def.exec(src);\n    if (cap) {\n      const tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      const href = cap[2] ? cap[2].replace(/^<(.*)>$/, '$1').replace(this.rules.inline._escapes, '$1') : '';\n      const title = cap[3] ? cap[3].substring(1, cap[3].length - 1).replace(this.rules.inline._escapes, '$1') : cap[3];\n      return {\n        type: 'def',\n        tag,\n        raw: cap[0],\n        href,\n        title\n      };\n    }\n  }\n\n  table(src) {\n    const cap = this.rules.block.table.exec(src);\n    if (cap) {\n      const item = {\n        type: 'table',\n        header: splitCells(cap[1]).map(c => { return { text: c }; }),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        rows: cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        item.raw = cap[0];\n\n        let l = item.align.length;\n        let i, j, k, row;\n        for (i = 0; i < l; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        l = item.rows.length;\n        for (i = 0; i < l; i++) {\n          item.rows[i] = splitCells(item.rows[i], item.header.length).map(c => { return { text: c }; });\n        }\n\n        // parse child tokens inside headers and cells\n\n        // header child tokens\n        l = item.header.length;\n        for (j = 0; j < l; j++) {\n          item.header[j].tokens = this.lexer.inline(item.header[j].text);\n        }\n\n        // cell child tokens\n        l = item.rows.length;\n        for (j = 0; j < l; j++) {\n          row = item.rows[j];\n          for (k = 0; k < row.length; k++) {\n            row[k].tokens = this.lexer.inline(row[k].text);\n          }\n        }\n\n        return item;\n      }\n    }\n  }\n\n  lheading(src) {\n    const cap = this.rules.block.lheading.exec(src);\n    if (cap) {\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[2].charAt(0) === '=' ? 1 : 2,\n        text: cap[1],\n        tokens: this.lexer.inline(cap[1])\n      };\n    }\n  }\n\n  paragraph(src) {\n    const cap = this.rules.block.paragraph.exec(src);\n    if (cap) {\n      const text = cap[1].charAt(cap[1].length - 1) === '\\n'\n        ? cap[1].slice(0, -1)\n        : cap[1];\n      return {\n        type: 'paragraph',\n        raw: cap[0],\n        text,\n        tokens: this.lexer.inline(text)\n      };\n    }\n  }\n\n  text(src) {\n    const cap = this.rules.block.text.exec(src);\n    if (cap) {\n      return {\n        type: 'text',\n        raw: cap[0],\n        text: cap[0],\n        tokens: this.lexer.inline(cap[0])\n      };\n    }\n  }\n\n  escape(src) {\n    const cap = this.rules.inline.escape.exec(src);\n    if (cap) {\n      return {\n        type: 'escape',\n        raw: cap[0],\n        text: escape(cap[1])\n      };\n    }\n  }\n\n  tag(src) {\n    const cap = this.rules.inline.tag.exec(src);\n    if (cap) {\n      if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n        this.lexer.state.inLink = true;\n      } else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.lexer.state.inLink = false;\n      }\n      if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = true;\n      } else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = false;\n      }\n\n      return {\n        type: this.options.sanitize\n          ? 'text'\n          : 'html',\n        raw: cap[0],\n        inLink: this.lexer.state.inLink,\n        inRawBlock: this.lexer.state.inRawBlock,\n        text: this.options.sanitize\n          ? (this.options.sanitizer\n            ? this.options.sanitizer(cap[0])\n            : escape(cap[0]))\n          : cap[0]\n      };\n    }\n  }\n\n  link(src) {\n    const cap = this.rules.inline.link.exec(src);\n    if (cap) {\n      const trimmedUrl = cap[2].trim();\n      if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n        // commonmark requires matching angle brackets\n        if (!(/>$/.test(trimmedUrl))) {\n          return;\n        }\n\n        // ending angle bracket cannot be escaped\n        const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n        if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n          return;\n        }\n      } else {\n        // find closing parenthesis\n        const lastParenIndex = findClosingBracket(cap[2], '()');\n        if (lastParenIndex > -1) {\n          const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n          const linkLen = start + cap[1].length + lastParenIndex;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = '';\n        }\n      }\n      let href = cap[2];\n      let title = '';\n      if (this.options.pedantic) {\n        // split pedantic href and title\n        const link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n\n      href = href.trim();\n      if (/^</.test(href)) {\n        if (this.options.pedantic && !(/>$/.test(trimmedUrl))) {\n          // pedantic allows starting angle bracket without ending angle bracket\n          href = href.slice(1);\n        } else {\n          href = href.slice(1, -1);\n        }\n      }\n      return outputLink(cap, {\n        href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n        title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n      }, cap[0], this.lexer);\n    }\n  }\n\n  reflink(src, links) {\n    let cap;\n    if ((cap = this.rules.inline.reflink.exec(src))\n        || (cap = this.rules.inline.nolink.exec(src))) {\n      let link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = links[link.toLowerCase()];\n      if (!link) {\n        const text = cap[0].charAt(0);\n        return {\n          type: 'text',\n          raw: text,\n          text\n        };\n      }\n      return outputLink(cap, link, cap[0], this.lexer);\n    }\n  }\n\n  emStrong(src, maskedSrc, prevChar = '') {\n    let match = this.rules.inline.emStrong.lDelim.exec(src);\n    if (!match) return;\n\n    // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n    if (match[3] && prevChar.match(/[\\p{L}\\p{N}]/u)) return;\n\n    const nextChar = match[1] || match[2] || '';\n\n    if (!nextChar || (nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar)))) {\n      const lLength = match[0].length - 1;\n      let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n\n      const endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n      endReg.lastIndex = 0;\n\n      // Clip maskedSrc to same section of string as src (move to lexer?)\n      maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n\n      while ((match = endReg.exec(maskedSrc)) != null) {\n        rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n\n        if (!rDelim) continue; // skip single * in __abc*abc__\n\n        rLength = rDelim.length;\n\n        if (match[3] || match[4]) { // found another Left Delim\n          delimTotal += rLength;\n          continue;\n        } else if (match[5] || match[6]) { // either Left or Right Delim\n          if (lLength % 3 && !((lLength + rLength) % 3)) {\n            midDelimTotal += rLength;\n            continue; // CommonMark Emphasis Rules 9-10\n          }\n        }\n\n        delimTotal -= rLength;\n\n        if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n\n        // Remove extra characters. *a*** -> *a*\n        rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n\n        const raw = src.slice(0, lLength + match.index + (match[0].length - rDelim.length) + rLength);\n\n        // Create `em` if smallest delimiter has odd char count. *a***\n        if (Math.min(lLength, rLength) % 2) {\n          const text = raw.slice(1, -1);\n          return {\n            type: 'em',\n            raw,\n            text,\n            tokens: this.lexer.inlineTokens(text)\n          };\n        }\n\n        // Create 'strong' if smallest delimiter has even char count. **a***\n        const text = raw.slice(2, -2);\n        return {\n          type: 'strong',\n          raw,\n          text,\n          tokens: this.lexer.inlineTokens(text)\n        };\n      }\n    }\n  }\n\n  codespan(src) {\n    const cap = this.rules.inline.code.exec(src);\n    if (cap) {\n      let text = cap[2].replace(/\\n/g, ' ');\n      const hasNonSpaceChars = /[^ ]/.test(text);\n      const hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n      if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n        text = text.substring(1, text.length - 1);\n      }\n      text = escape(text, true);\n      return {\n        type: 'codespan',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n\n  br(src) {\n    const cap = this.rules.inline.br.exec(src);\n    if (cap) {\n      return {\n        type: 'br',\n        raw: cap[0]\n      };\n    }\n  }\n\n  del(src) {\n    const cap = this.rules.inline.del.exec(src);\n    if (cap) {\n      return {\n        type: 'del',\n        raw: cap[0],\n        text: cap[2],\n        tokens: this.lexer.inlineTokens(cap[2])\n      };\n    }\n  }\n\n  autolink(src, mangle) {\n    const cap = this.rules.inline.autolink.exec(src);\n    if (cap) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  url(src, mangle) {\n    let cap;\n    if (cap = this.rules.inline.url.exec(src)) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        let prevCapZero;\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n        } while (prevCapZero !== cap[0]);\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + cap[0];\n        } else {\n          href = cap[0];\n        }\n      }\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  inlineText(src, smartypants) {\n    const cap = this.rules.inline.text.exec(src);\n    if (cap) {\n      let text;\n      if (this.lexer.state.inRawBlock) {\n        text = this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0];\n      } else {\n        text = escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n      }\n      return {\n        type: 'text',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n}\n\n/**\n * Block-Level Grammar\n */\nconst block = {\n  newline: /^(?: *(?:\\n|$))+/,\n  code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n  fences: /^ {0,3}(`{3,}(?=[^`\\n]*(?:\\n|$))|~{3,})([^\\n]*)(?:\\n|$)(?:|([\\s\\S]*?)(?:\\n|$))(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n  hr: /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/,\n  heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *(?:\\n *)?([^<\\s][^\\s]*|<.*?>)(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noopTest,\n  lheading: /^((?:.|\\n(?!\\n))+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  // regex template, placeholders will be replaced according to different paragraph\n  // interruption rules of commonmark and the original markdown spec:\n  _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nblock.listItemStart = edit(/^( *)(bull) */)\n  .replace('bull', block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('|table', '')\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = { ...block };\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = {\n  ...block.normal,\n  table: '^ *([^\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}(?:\\\\| *)?(:?-+:? *(?:\\\\| *:?-+:? *)*)(?:\\\\| *)?' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n};\n\nblock.gfm.table = edit(block.gfm.table)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('blockquote', ' {0,3}>')\n  .replace('code', ' {4}[^\\\\n]')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.gfm.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('table', block.gfm.table) // interrupt paragraphs with table\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\n\nblock.pedantic = {\n  ...block.normal,\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n  heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n  fences: noopTest, // fences not supported\n  lheading: /^(.+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  paragraph: edit(block.normal._paragraph)\n    .replace('hr', block.hr)\n    .replace('heading', ' *#{1,6} *[^\\n]')\n    .replace('lheading', block.lheading)\n    .replace('blockquote', ' {0,3}>')\n    .replace('|fences', '')\n    .replace('|list', '')\n    .replace('|html', '')\n    .getRegex()\n};\n\n/**\n * Inline-Level Grammar\n */\nconst inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noopTest,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(ref)\\]/,\n  nolink: /^!?\\[(ref)\\](?:\\[\\])?/,\n  reflinkSearch: 'reflink|nolink(?!\\\\()',\n  emStrong: {\n    lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n    //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n    //          () Skip orphan inside strong                                      () Consume to delim     (1) #***                (2) a***#, a***                             (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n    rDelimAst: /^(?:[^_*\\\\]|\\\\.)*?\\_\\_(?:[^_*\\\\]|\\\\.)*?\\*(?:[^_*\\\\]|\\\\.)*?(?=\\_\\_)|(?:[^*\\\\]|\\\\.)+(?=[^*])|[punct_](\\*+)(?=[\\s]|$)|(?:[^punct*_\\s\\\\]|\\\\.)(\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|(?:[^punct*_\\s\\\\]|\\\\.)(\\*+)(?=[^punct*_\\s])/,\n    rDelimUnd: /^(?:[^_*\\\\]|\\\\.)*?\\*\\*(?:[^_*\\\\]|\\\\.)*?\\_(?:[^_*\\\\]|\\\\.)*?(?=\\*\\*)|(?:[^_\\\\]|\\\\.)+(?=[^_])|[punct*](\\_+)(?=[\\s]|$)|(?:[^punct*_\\s\\\\]|\\\\.)(\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n  },\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noopTest,\n  text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n  punctuation: /^([\\spunctuation])/\n};\n\n// list of punctuation marks from CommonMark spec\n// without * and _ to handle the different emphasis markers * and _\ninline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\ninline.punctuation = edit(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex();\n\n// sequences em should skip over [title](link), `code`, <html>\ninline.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\n// lookbehind is not available on Safari as of version 16\n// inline.escapedEmSt = /(?<=(?:^|[^\\\\)(?:\\\\[^])*)\\\\[*_]/g;\ninline.escapedEmSt = /(?:^|[^\\\\])(?:\\\\\\\\)*\\\\[*_]/g;\n\ninline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();\n\ninline.emStrong.lDelim = edit(inline.emStrong.lDelim)\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', inline._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\ninline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.nolink = edit(inline.nolink)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.reflinkSearch = edit(inline.reflinkSearch, 'g')\n  .replace('reflink', inline.reflink)\n  .replace('nolink', inline.nolink)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = { ...inline };\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = {\n  ...inline.normal,\n  strong: {\n    start: /^__|\\*\\*/,\n    middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n    endAst: /\\*\\*(?!\\*)/g,\n    endUnd: /__(?!_)/g\n  },\n  em: {\n    start: /^_|\\*/,\n    middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n    endAst: /\\*(?!\\*)/g,\n    endUnd: /_(?!_)/g\n  },\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n};\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = {\n  ...inline.normal,\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_'\"~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'\"~)]+(?!$))+/,\n  del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n  text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n};\n\ninline.gfm.url = edit(inline.gfm.url, 'i')\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = {\n  ...inline.gfm,\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text)\n    .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n    .replace(/\\{2,\\}/g, '*')\n    .getRegex()\n};\n\n/**\n * smartypants text replacement\n * @param {string} text\n */\nfunction smartypants(text) {\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n}\n\n/**\n * mangle email addresses\n * @param {string} text\n */\nfunction mangle(text) {\n  let out = '',\n    i,\n    ch;\n\n  const l = text.length;\n  for (i = 0; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n}\n\n/**\n * Block Lexer\n */\nclass Lexer {\n  constructor(options) {\n    this.tokens = [];\n    this.tokens.links = Object.create(null);\n    this.options = options || defaults;\n    this.options.tokenizer = this.options.tokenizer || new Tokenizer();\n    this.tokenizer = this.options.tokenizer;\n    this.tokenizer.options = this.options;\n    this.tokenizer.lexer = this;\n    this.inlineQueue = [];\n    this.state = {\n      inLink: false,\n      inRawBlock: false,\n      top: true\n    };\n\n    const rules = {\n      block: block.normal,\n      inline: inline.normal\n    };\n\n    if (this.options.pedantic) {\n      rules.block = block.pedantic;\n      rules.inline = inline.pedantic;\n    } else if (this.options.gfm) {\n      rules.block = block.gfm;\n      if (this.options.breaks) {\n        rules.inline = inline.breaks;\n      } else {\n        rules.inline = inline.gfm;\n      }\n    }\n    this.tokenizer.rules = rules;\n  }\n\n  /**\n   * Expose Rules\n   */\n  static get rules() {\n    return {\n      block,\n      inline\n    };\n  }\n\n  /**\n   * Static Lex Method\n   */\n  static lex(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.lex(src);\n  }\n\n  /**\n   * Static Lex Inline Method\n   */\n  static lexInline(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.inlineTokens(src);\n  }\n\n  /**\n   * Preprocessing\n   */\n  lex(src) {\n    src = src\n      .replace(/\\r\\n|\\r/g, '\\n');\n\n    this.blockTokens(src, this.tokens);\n\n    let next;\n    while (next = this.inlineQueue.shift()) {\n      this.inlineTokens(next.src, next.tokens);\n    }\n\n    return this.tokens;\n  }\n\n  /**\n   * Lexing\n   */\n  blockTokens(src, tokens = []) {\n    if (this.options.pedantic) {\n      src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n    } else {\n      src = src.replace(/^( *)(\\t+)/gm, (_, leading, tabs) => {\n        return leading + '    '.repeat(tabs.length);\n      });\n    }\n\n    let token, lastToken, cutSrc, lastParagraphClipped;\n\n    while (src) {\n      if (this.options.extensions\n        && this.options.extensions.block\n        && this.options.extensions.block.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // newline\n      if (token = this.tokenizer.space(src)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.length === 1 && tokens.length > 0) {\n          // if there's a single \\n as a spacer, it's terminating the last line,\n          // so move it there so that we don't get unecessary paragraph tags\n          tokens[tokens.length - 1].raw += '\\n';\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.code(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        // An indented code block cannot interrupt a paragraph.\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // fences\n      if (token = this.tokenizer.fences(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // heading\n      if (token = this.tokenizer.heading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // hr\n      if (token = this.tokenizer.hr(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // blockquote\n      if (token = this.tokenizer.blockquote(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // list\n      if (token = this.tokenizer.list(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // html\n      if (token = this.tokenizer.html(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // def\n      if (token = this.tokenizer.def(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.raw;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else if (!this.tokens.links[token.tag]) {\n          this.tokens.links[token.tag] = {\n            href: token.href,\n            title: token.title\n          };\n        }\n        continue;\n      }\n\n      // table (gfm)\n      if (token = this.tokenizer.table(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // lheading\n      if (token = this.tokenizer.lheading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // top-level paragraph\n      // prevent paragraph consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startBlock) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startBlock.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n        lastToken = tokens[tokens.length - 1];\n        if (lastParagraphClipped && lastToken.type === 'paragraph') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        lastParagraphClipped = (cutSrc.length !== src.length);\n        src = src.substring(token.raw.length);\n        continue;\n      }\n\n      // text\n      if (token = this.tokenizer.text(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    this.state.top = true;\n    return tokens;\n  }\n\n  inline(src, tokens = []) {\n    this.inlineQueue.push({ src, tokens });\n    return tokens;\n  }\n\n  /**\n   * Lexing/Compiling\n   */\n  inlineTokens(src, tokens = []) {\n    let token, lastToken, cutSrc;\n\n    // String with links masked to avoid interference with em and strong\n    let maskedSrc = src;\n    let match;\n    let keepPrevChar, prevChar;\n\n    // Mask out reflinks\n    if (this.tokens.links) {\n      const links = Object.keys(this.tokens.links);\n      if (links.length > 0) {\n        while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n          if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n          }\n        }\n      }\n    }\n    // Mask out other blocks\n    while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n    }\n\n    // Mask out escaped em & strong delimiters\n    while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index + match[0].length - 2) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n      this.tokenizer.rules.inline.escapedEmSt.lastIndex--;\n    }\n\n    while (src) {\n      if (!keepPrevChar) {\n        prevChar = '';\n      }\n      keepPrevChar = false;\n\n      // extensions\n      if (this.options.extensions\n        && this.options.extensions.inline\n        && this.options.extensions.inline.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // escape\n      if (token = this.tokenizer.escape(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // tag\n      if (token = this.tokenizer.tag(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // link\n      if (token = this.tokenizer.link(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // reflink, nolink\n      if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // em & strong\n      if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.codespan(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // br\n      if (token = this.tokenizer.br(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // del (gfm)\n      if (token = this.tokenizer.del(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // autolink\n      if (token = this.tokenizer.autolink(src, mangle)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // url (gfm)\n      if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // text\n      // prevent inlineText consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startInline) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startInline.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n          prevChar = token.raw.slice(-1);\n        }\n        keepPrevChar = true;\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    return tokens;\n  }\n}\n\n/**\n * Renderer\n */\nclass Renderer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  code(code, infostring, escaped) {\n    const lang = (infostring || '').match(/\\S*/)[0];\n    if (this.options.highlight) {\n      const out = this.options.highlight(code, lang);\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n\n    code = code.replace(/\\n$/, '') + '\\n';\n\n    if (!lang) {\n      return '<pre><code>'\n        + (escaped ? code : escape(code, true))\n        + '</code></pre>\\n';\n    }\n\n    return '<pre><code class=\"'\n      + this.options.langPrefix\n      + escape(lang)\n      + '\">'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>\\n';\n  }\n\n  /**\n   * @param {string} quote\n   */\n  blockquote(quote) {\n    return `<blockquote>\\n${quote}</blockquote>\\n`;\n  }\n\n  html(html) {\n    return html;\n  }\n\n  /**\n   * @param {string} text\n   * @param {string} level\n   * @param {string} raw\n   * @param {any} slugger\n   */\n  heading(text, level, raw, slugger) {\n    if (this.options.headerIds) {\n      const id = this.options.headerPrefix + slugger.slug(raw);\n      return `<h${level} id=\"${id}\">${text}</h${level}>\\n`;\n    }\n\n    // ignore IDs\n    return `<h${level}>${text}</h${level}>\\n`;\n  }\n\n  hr() {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  }\n\n  list(body, ordered, start) {\n    const type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n    return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n  }\n\n  /**\n   * @param {string} text\n   */\n  listitem(text) {\n    return `<li>${text}</li>\\n`;\n  }\n\n  checkbox(checked) {\n    return '<input '\n      + (checked ? 'checked=\"\" ' : '')\n      + 'disabled=\"\" type=\"checkbox\"'\n      + (this.options.xhtml ? ' /' : '')\n      + '> ';\n  }\n\n  /**\n   * @param {string} text\n   */\n  paragraph(text) {\n    return `<p>${text}</p>\\n`;\n  }\n\n  /**\n   * @param {string} header\n   * @param {string} body\n   */\n  table(header, body) {\n    if (body) body = `<tbody>${body}</tbody>`;\n\n    return '<table>\\n'\n      + '<thead>\\n'\n      + header\n      + '</thead>\\n'\n      + body\n      + '</table>\\n';\n  }\n\n  /**\n   * @param {string} content\n   */\n  tablerow(content) {\n    return `<tr>\\n${content}</tr>\\n`;\n  }\n\n  tablecell(content, flags) {\n    const type = flags.header ? 'th' : 'td';\n    const tag = flags.align\n      ? `<${type} align=\"${flags.align}\">`\n      : `<${type}>`;\n    return tag + content + `</${type}>\\n`;\n  }\n\n  /**\n   * span level renderer\n   * @param {string} text\n   */\n  strong(text) {\n    return `<strong>${text}</strong>`;\n  }\n\n  /**\n   * @param {string} text\n   */\n  em(text) {\n    return `<em>${text}</em>`;\n  }\n\n  /**\n   * @param {string} text\n   */\n  codespan(text) {\n    return `<code>${text}</code>`;\n  }\n\n  br() {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  }\n\n  /**\n   * @param {string} text\n   */\n  del(text) {\n    return `<del>${text}</del>`;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */\n  link(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n    let out = '<a href=\"' + href + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += '>' + text + '</a>';\n    return out;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */\n  image(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n\n    let out = `<img src=\"${href}\" alt=\"${text}\"`;\n    if (title) {\n      out += ` title=\"${title}\"`;\n    }\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n  }\n\n  text(text) {\n    return text;\n  }\n}\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\nclass TextRenderer {\n  // no need for block level renderers\n  strong(text) {\n    return text;\n  }\n\n  em(text) {\n    return text;\n  }\n\n  codespan(text) {\n    return text;\n  }\n\n  del(text) {\n    return text;\n  }\n\n  html(text) {\n    return text;\n  }\n\n  text(text) {\n    return text;\n  }\n\n  link(href, title, text) {\n    return '' + text;\n  }\n\n  image(href, title, text) {\n    return '' + text;\n  }\n\n  br() {\n    return '';\n  }\n}\n\n/**\n * Slugger generates header id\n */\nclass Slugger {\n  constructor() {\n    this.seen = {};\n  }\n\n  /**\n   * @param {string} value\n   */\n  serialize(value) {\n    return value\n      .toLowerCase()\n      .trim()\n      // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '')\n      // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '')\n      .replace(/\\s/g, '-');\n  }\n\n  /**\n   * Finds the next safe (unique) slug to use\n   * @param {string} originalSlug\n   * @param {boolean} isDryRun\n   */\n  getNextSafeSlug(originalSlug, isDryRun) {\n    let slug = originalSlug;\n    let occurenceAccumulator = 0;\n    if (this.seen.hasOwnProperty(slug)) {\n      occurenceAccumulator = this.seen[originalSlug];\n      do {\n        occurenceAccumulator++;\n        slug = originalSlug + '-' + occurenceAccumulator;\n      } while (this.seen.hasOwnProperty(slug));\n    }\n    if (!isDryRun) {\n      this.seen[originalSlug] = occurenceAccumulator;\n      this.seen[slug] = 0;\n    }\n    return slug;\n  }\n\n  /**\n   * Convert string to unique id\n   * @param {object} [options]\n   * @param {boolean} [options.dryrun] Generates the next unique slug without\n   * updating the internal accumulator.\n   */\n  slug(value, options = {}) {\n    const slug = this.serialize(value);\n    return this.getNextSafeSlug(slug, options.dryrun);\n  }\n}\n\n/**\n * Parsing & Compiling\n */\nclass Parser {\n  constructor(options) {\n    this.options = options || defaults;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n    this.textRenderer = new TextRenderer();\n    this.slugger = new Slugger();\n  }\n\n  /**\n   * Static Parse Method\n   */\n  static parse(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parse(tokens);\n  }\n\n  /**\n   * Static Parse Inline Method\n   */\n  static parseInline(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parseInline(tokens);\n  }\n\n  /**\n   * Parse Loop\n   */\n  parse(tokens, top = true) {\n    let out = '',\n      i,\n      j,\n      k,\n      l2,\n      l3,\n      row,\n      cell,\n      header,\n      body,\n      token,\n      ordered,\n      start,\n      loose,\n      itemBody,\n      item,\n      checked,\n      task,\n      checkbox,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'space': {\n          continue;\n        }\n        case 'hr': {\n          out += this.renderer.hr();\n          continue;\n        }\n        case 'heading': {\n          out += this.renderer.heading(\n            this.parseInline(token.tokens),\n            token.depth,\n            unescape(this.parseInline(token.tokens, this.textRenderer)),\n            this.slugger);\n          continue;\n        }\n        case 'code': {\n          out += this.renderer.code(token.text,\n            token.lang,\n            token.escaped);\n          continue;\n        }\n        case 'table': {\n          header = '';\n\n          // header\n          cell = '';\n          l2 = token.header.length;\n          for (j = 0; j < l2; j++) {\n            cell += this.renderer.tablecell(\n              this.parseInline(token.header[j].tokens),\n              { header: true, align: token.align[j] }\n            );\n          }\n          header += this.renderer.tablerow(cell);\n\n          body = '';\n          l2 = token.rows.length;\n          for (j = 0; j < l2; j++) {\n            row = token.rows[j];\n\n            cell = '';\n            l3 = row.length;\n            for (k = 0; k < l3; k++) {\n              cell += this.renderer.tablecell(\n                this.parseInline(row[k].tokens),\n                { header: false, align: token.align[k] }\n              );\n            }\n\n            body += this.renderer.tablerow(cell);\n          }\n          out += this.renderer.table(header, body);\n          continue;\n        }\n        case 'blockquote': {\n          body = this.parse(token.tokens);\n          out += this.renderer.blockquote(body);\n          continue;\n        }\n        case 'list': {\n          ordered = token.ordered;\n          start = token.start;\n          loose = token.loose;\n          l2 = token.items.length;\n\n          body = '';\n          for (j = 0; j < l2; j++) {\n            item = token.items[j];\n            checked = item.checked;\n            task = item.task;\n\n            itemBody = '';\n            if (item.task) {\n              checkbox = this.renderer.checkbox(checked);\n              if (loose) {\n                if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                  item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                  if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                    item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                  }\n                } else {\n                  item.tokens.unshift({\n                    type: 'text',\n                    text: checkbox\n                  });\n                }\n              } else {\n                itemBody += checkbox;\n              }\n            }\n\n            itemBody += this.parse(item.tokens, loose);\n            body += this.renderer.listitem(itemBody, task, checked);\n          }\n\n          out += this.renderer.list(body, ordered, start);\n          continue;\n        }\n        case 'html': {\n          // TODO parse inline content if parameter markdown=1\n          out += this.renderer.html(token.text);\n          continue;\n        }\n        case 'paragraph': {\n          out += this.renderer.paragraph(this.parseInline(token.tokens));\n          continue;\n        }\n        case 'text': {\n          body = token.tokens ? this.parseInline(token.tokens) : token.text;\n          while (i + 1 < l && tokens[i + 1].type === 'text') {\n            token = tokens[++i];\n            body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n          }\n          out += top ? this.renderer.paragraph(body) : body;\n          continue;\n        }\n\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n\n    return out;\n  }\n\n  /**\n   * Parse Inline Tokens\n   */\n  parseInline(tokens, renderer) {\n    renderer = renderer || this.renderer;\n    let out = '',\n      i,\n      token,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'escape': {\n          out += renderer.text(token.text);\n          break;\n        }\n        case 'html': {\n          out += renderer.html(token.text);\n          break;\n        }\n        case 'link': {\n          out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'image': {\n          out += renderer.image(token.href, token.title, token.text);\n          break;\n        }\n        case 'strong': {\n          out += renderer.strong(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'em': {\n          out += renderer.em(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'codespan': {\n          out += renderer.codespan(token.text);\n          break;\n        }\n        case 'br': {\n          out += renderer.br();\n          break;\n        }\n        case 'del': {\n          out += renderer.del(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'text': {\n          out += renderer.text(token.text);\n          break;\n        }\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n    return out;\n  }\n}\n\nclass Hooks {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  static passThroughHooks = new Set([\n    'preprocess',\n    'postprocess'\n  ]);\n\n  /**\n   * Process markdown before marked\n   */\n  preprocess(markdown) {\n    return markdown;\n  }\n\n  /**\n   * Process HTML after marked is finished\n   */\n  postprocess(html) {\n    return html;\n  }\n}\n\nfunction onError(silent, async, callback) {\n  return (e) => {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n    if (silent) {\n      const msg = '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n      if (async) {\n        return Promise.resolve(msg);\n      }\n      if (callback) {\n        callback(null, msg);\n        return;\n      }\n      return msg;\n    }\n\n    if (async) {\n      return Promise.reject(e);\n    }\n    if (callback) {\n      callback(e);\n      return;\n    }\n    throw e;\n  };\n}\n\nfunction parseMarkdown(lexer, parser) {\n  return (src, opt, callback) => {\n    if (typeof opt === 'function') {\n      callback = opt;\n      opt = null;\n    }\n\n    const origOpt = { ...opt };\n    opt = { ...marked.defaults, ...origOpt };\n    const throwError = onError(opt.silent, opt.async, callback);\n\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      return throwError(new Error('marked(): input parameter is undefined or null'));\n    }\n    if (typeof src !== 'string') {\n      return throwError(new Error('marked(): input parameter is of type '\n        + Object.prototype.toString.call(src) + ', string expected'));\n    }\n\n    checkSanitizeDeprecation(opt);\n\n    if (opt.hooks) {\n      opt.hooks.options = opt;\n    }\n\n    if (callback) {\n      const highlight = opt.highlight;\n      let tokens;\n\n      try {\n        if (opt.hooks) {\n          src = opt.hooks.preprocess(src);\n        }\n        tokens = lexer(src, opt);\n      } catch (e) {\n        return throwError(e);\n      }\n\n      const done = function(err) {\n        let out;\n\n        if (!err) {\n          try {\n            if (opt.walkTokens) {\n              marked.walkTokens(tokens, opt.walkTokens);\n            }\n            out = parser(tokens, opt);\n            if (opt.hooks) {\n              out = opt.hooks.postprocess(out);\n            }\n          } catch (e) {\n            err = e;\n          }\n        }\n\n        opt.highlight = highlight;\n\n        return err\n          ? throwError(err)\n          : callback(null, out);\n      };\n\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n\n      delete opt.highlight;\n\n      if (!tokens.length) return done();\n\n      let pending = 0;\n      marked.walkTokens(tokens, function(token) {\n        if (token.type === 'code') {\n          pending++;\n          setTimeout(() => {\n            highlight(token.text, token.lang, function(err, code) {\n              if (err) {\n                return done(err);\n              }\n              if (code != null && code !== token.text) {\n                token.text = code;\n                token.escaped = true;\n              }\n\n              pending--;\n              if (pending === 0) {\n                done();\n              }\n            });\n          }, 0);\n        }\n      });\n\n      if (pending === 0) {\n        done();\n      }\n\n      return;\n    }\n\n    if (opt.async) {\n      return Promise.resolve(opt.hooks ? opt.hooks.preprocess(src) : src)\n        .then(src => lexer(src, opt))\n        .then(tokens => opt.walkTokens ? Promise.all(marked.walkTokens(tokens, opt.walkTokens)).then(() => tokens) : tokens)\n        .then(tokens => parser(tokens, opt))\n        .then(html => opt.hooks ? opt.hooks.postprocess(html) : html)\n        .catch(throwError);\n    }\n\n    try {\n      if (opt.hooks) {\n        src = opt.hooks.preprocess(src);\n      }\n      const tokens = lexer(src, opt);\n      if (opt.walkTokens) {\n        marked.walkTokens(tokens, opt.walkTokens);\n      }\n      let html = parser(tokens, opt);\n      if (opt.hooks) {\n        html = opt.hooks.postprocess(html);\n      }\n      return html;\n    } catch (e) {\n      return throwError(e);\n    }\n  };\n}\n\n/**\n * Marked\n */\nfunction marked(src, opt, callback) {\n  return parseMarkdown(Lexer.lex, Parser.parse)(src, opt, callback);\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  marked.defaults = { ...marked.defaults, ...opt };\n  changeDefaults(marked.defaults);\n  return marked;\n};\n\nmarked.getDefaults = getDefaults;\n\nmarked.defaults = defaults;\n\n/**\n * Use Extension\n */\n\nmarked.use = function(...args) {\n  const extensions = marked.defaults.extensions || { renderers: {}, childTokens: {} };\n\n  args.forEach((pack) => {\n    // copy options to new object\n    const opts = { ...pack };\n\n    // set async to true if it was set to true before\n    opts.async = marked.defaults.async || opts.async || false;\n\n    // ==-- Parse \"addon\" extensions --== //\n    if (pack.extensions) {\n      pack.extensions.forEach((ext) => {\n        if (!ext.name) {\n          throw new Error('extension name required');\n        }\n        if (ext.renderer) { // Renderer extensions\n          const prevRenderer = extensions.renderers[ext.name];\n          if (prevRenderer) {\n            // Replace extension with func to run new extension but fall back if false\n            extensions.renderers[ext.name] = function(...args) {\n              let ret = ext.renderer.apply(this, args);\n              if (ret === false) {\n                ret = prevRenderer.apply(this, args);\n              }\n              return ret;\n            };\n          } else {\n            extensions.renderers[ext.name] = ext.renderer;\n          }\n        }\n        if (ext.tokenizer) { // Tokenizer Extensions\n          if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n            throw new Error(\"extension level must be 'block' or 'inline'\");\n          }\n          if (extensions[ext.level]) {\n            extensions[ext.level].unshift(ext.tokenizer);\n          } else {\n            extensions[ext.level] = [ext.tokenizer];\n          }\n          if (ext.start) { // Function to check for start of token\n            if (ext.level === 'block') {\n              if (extensions.startBlock) {\n                extensions.startBlock.push(ext.start);\n              } else {\n                extensions.startBlock = [ext.start];\n              }\n            } else if (ext.level === 'inline') {\n              if (extensions.startInline) {\n                extensions.startInline.push(ext.start);\n              } else {\n                extensions.startInline = [ext.start];\n              }\n            }\n          }\n        }\n        if (ext.childTokens) { // Child tokens to be visited by walkTokens\n          extensions.childTokens[ext.name] = ext.childTokens;\n        }\n      });\n      opts.extensions = extensions;\n    }\n\n    // ==-- Parse \"overwrite\" extensions --== //\n    if (pack.renderer) {\n      const renderer = marked.defaults.renderer || new Renderer();\n      for (const prop in pack.renderer) {\n        const prevRenderer = renderer[prop];\n        // Replace renderer with func to run extension, but fall back if false\n        renderer[prop] = (...args) => {\n          let ret = pack.renderer[prop].apply(renderer, args);\n          if (ret === false) {\n            ret = prevRenderer.apply(renderer, args);\n          }\n          return ret;\n        };\n      }\n      opts.renderer = renderer;\n    }\n    if (pack.tokenizer) {\n      const tokenizer = marked.defaults.tokenizer || new Tokenizer();\n      for (const prop in pack.tokenizer) {\n        const prevTokenizer = tokenizer[prop];\n        // Replace tokenizer with func to run extension, but fall back if false\n        tokenizer[prop] = (...args) => {\n          let ret = pack.tokenizer[prop].apply(tokenizer, args);\n          if (ret === false) {\n            ret = prevTokenizer.apply(tokenizer, args);\n          }\n          return ret;\n        };\n      }\n      opts.tokenizer = tokenizer;\n    }\n\n    // ==-- Parse Hooks extensions --== //\n    if (pack.hooks) {\n      const hooks = marked.defaults.hooks || new Hooks();\n      for (const prop in pack.hooks) {\n        const prevHook = hooks[prop];\n        if (Hooks.passThroughHooks.has(prop)) {\n          hooks[prop] = (arg) => {\n            if (marked.defaults.async) {\n              return Promise.resolve(pack.hooks[prop].call(hooks, arg)).then(ret => {\n                return prevHook.call(hooks, ret);\n              });\n            }\n\n            const ret = pack.hooks[prop].call(hooks, arg);\n            return prevHook.call(hooks, ret);\n          };\n        } else {\n          hooks[prop] = (...args) => {\n            let ret = pack.hooks[prop].apply(hooks, args);\n            if (ret === false) {\n              ret = prevHook.apply(hooks, args);\n            }\n            return ret;\n          };\n        }\n      }\n      opts.hooks = hooks;\n    }\n\n    // ==-- Parse WalkTokens extensions --== //\n    if (pack.walkTokens) {\n      const walkTokens = marked.defaults.walkTokens;\n      opts.walkTokens = function(token) {\n        let values = [];\n        values.push(pack.walkTokens.call(this, token));\n        if (walkTokens) {\n          values = values.concat(walkTokens.call(this, token));\n        }\n        return values;\n      };\n    }\n\n    marked.setOptions(opts);\n  });\n};\n\n/**\n * Run callback for every token\n */\n\nmarked.walkTokens = function(tokens, callback) {\n  let values = [];\n  for (const token of tokens) {\n    values = values.concat(callback.call(marked, token));\n    switch (token.type) {\n      case 'table': {\n        for (const cell of token.header) {\n          values = values.concat(marked.walkTokens(cell.tokens, callback));\n        }\n        for (const row of token.rows) {\n          for (const cell of row) {\n            values = values.concat(marked.walkTokens(cell.tokens, callback));\n          }\n        }\n        break;\n      }\n      case 'list': {\n        values = values.concat(marked.walkTokens(token.items, callback));\n        break;\n      }\n      default: {\n        if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) { // Walk any extensions\n          marked.defaults.extensions.childTokens[token.type].forEach(function(childTokens) {\n            values = values.concat(marked.walkTokens(token[childTokens], callback));\n          });\n        } else if (token.tokens) {\n          values = values.concat(marked.walkTokens(token.tokens, callback));\n        }\n      }\n    }\n  }\n  return values;\n};\n\n/**\n * Parse Inline\n * @param {string} src\n */\nmarked.parseInline = parseMarkdown(Lexer.lexInline, Parser.parseInline);\n\n/**\n * Expose\n */\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\nmarked.Tokenizer = Tokenizer;\nmarked.Slugger = Slugger;\nmarked.Hooks = Hooks;\nmarked.parse = marked;\n\nconst options = marked.options;\nconst setOptions = marked.setOptions;\nconst use = marked.use;\nconst walkTokens = marked.walkTokens;\nconst parseInline = marked.parseInline;\nconst parse = marked;\nconst parser = Parser.parse;\nconst lexer = Lexer.lex;\n\nexport { Hooks, Lexer, Parser, Renderer, Slugger, TextRenderer, Tokenizer, defaults, getDefaults, lexer, marked, options, parse, parseInline, parser, setOptions, use, walkTokens };\n",":host {\n  font-family: 'Yantramanav', serif, Arial, sans-serif;\n  line-height: 1.5;\n  font-weight: 400;\n  --main-color: #ff8834;\n}\n\np {\n  all: unset;\n}\n\nbutton {\n  font-family: 'Signika', serif, Arial, sans-serif;\n}\n\ninput {\n  font-family: 'Yantramanav', serif, Arial, sans-serif;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n  opacity: 0;\n  visibility: hidden;\n  transition: opacity 0.3s ease, visibility 0.3s ease;\n}\n\n.modal-overlay.visible {\n  opacity: 1;\n  visibility: visible;\n}\n\n.chat-container {\n  width: 90vw;\n  height: 90vh;\n  max-width: 1200px;\n  max-height: 800px;\n  background: white;\n  border-radius: 12px;\n  display: flex;\n  flex-direction: column;\n  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);\n  position: relative;\n  transform: scale(0.8);\n  transition: transform 0.3s ease;\n}\n\n.modal-overlay.visible .chat-container {\n  transform: scale(1);\n}\n\n.modal-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 20px 30px;\n  border-bottom: 1px solid #eee;\n  background: linear-gradient(135deg, var(--main-color), #ff8834);\n  color: white;\n  border-radius: 12px 12px 0 0;\n}\n\n.modal-title {\n  font-family: 'Signika', Arial, sans-serif;\n  font-size: 1.25rem;\n  font-weight: 600;\n  margin: 0;\n}\n\n.close-button {\n  background: none;\n  border: none;\n  color: white;\n  font-size: 1.5rem;\n  cursor: pointer;\n  padding: 8px;\n  border-radius: 50%;\n  width: 40px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: background-color 0.2s ease;\n}\n\n.close-button:hover {\n  background-color: rgba(255, 255, 255, 0.2);\n}\n\n.chat-content {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  padding: 30px;\n  min-height: 0;\n}\n\n.message-container {\n  flex: 1;\n  overflow-y: auto;\n  margin-bottom: 20px;\n  padding: 20px;\n  border: 1px solid #eee;\n  border-radius: 8px;\n  min-height: 300px;\n}\n\n.message {\n  margin: 12px 0;\n  padding: 12px 16px;\n  border-radius: 12px;\n  max-width: 80%;\n  word-wrap: break-word;\n  line-height: 1.4;\n}\n\n.user-message {\n  background: linear-gradient(135deg, var(--main-color), #ff8834);\n  color: white;\n  margin-left: auto;\n  width: fit-content;\n  border-radius: 20px 20px 0px 20px;\n}\n\n.ai-message {\n  background: hsla(240, 6%, 90%, 0.5);\n  color: #333;\n  margin-right: auto;\n  width: fit-content;\n  border-radius: 20px 20px 20px 0px;\n}\n\n.input-container {\n  display: flex;\n  gap: 12px;\n  align-items: center;\n  background: white;\n  padding: 16px;\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n}\n\ninput {\n  flex: 1;\n  padding: 12px 16px;\n  border: 1px solid #ddd;\n  border-radius: 6px;\n  font-size: 1rem;\n  outline: none;\n  transition: border-color 0.2s ease;\n}\n\ninput:focus {\n  border-color: var(--main-color);\n  box-shadow: 0 0 0 2px rgba(236, 102, 7, 0.1);\n}\n\nbutton {\n  padding: 12px 24px;\n  background: linear-gradient(135deg, var(--main-color), #ff8834);\n  color: white;\n  border: none;\n  border-radius: 6px;\n  cursor: pointer;\n  font-size: 1rem;\n  font-weight: 600;\n  transition: transform 0.2s ease, box-shadow 0.2s ease;\n}\n\nbutton:hover:not(:disabled) {\n  transform: translateY(-1px);\n  box-shadow: 0 4px 12px rgba(236, 102, 7, 0.3);\n}\n\nbutton:disabled {\n  background: #cccccc;\n  cursor: not-allowed;\n  transform: none;\n  box-shadow: none;\n}\n\n.typing-indicator {\n  display: none;\n  margin: 12px 0;\n  max-width: 80%;\n  margin-right: auto;\n}\n\n.typing-indicator.active {\n  display: block;\n}\n\n/* Skeleton integration styles */\n.typing-indicator .skeleton-container {\n  margin: 0;\n  background: transparent;\n  border: none;\n  padding: 12px 16px;\n}\n\n.typing-indicator .skeleton-wrapper {\n  gap: 8px;\n}\n\n.typing-indicator .skeleton-avatar {\n  width: 24px;\n  height: 24px;\n  margin-bottom: 0;\n}\n\n.typing-indicator .skeleton-line {\n  height: 12px;\n}\n\n.typing-indicator .skeleton-typing {\n  margin-top: 4px;\n}\n\n/* Scrollbar styling */\n.message-container::-webkit-scrollbar {\n  width: 8px;\n}\n\n.message-container::-webkit-scrollbar-track {\n  background: #f1f1f1;\n  border-radius: 4px;\n}\n\n.message-container::-webkit-scrollbar-thumb {\n  background: #c1c1c1;\n  border-radius: 4px;\n}\n\n.message-container::-webkit-scrollbar-thumb:hover {\n  background: #a1a1a1;\n}\n\n/* Responsive design */\n@media (max-width: 768px) {\n  .chat-container {\n    width: 95vw;\n    height: 95vh;\n    border-radius: 8px;\n  }\n\n  .modal-header {\n    padding: 15px 20px;\n  }\n\n  .modal-title {\n    font-size: 1.25rem;\n  }\n\n  .chat-content {\n    padding: 20px;\n  }\n\n  .message {\n    max-width: 90%;\n    padding: 10px 12px;\n  }\n\n  .input-container {\n    padding: 12px;\n    gap: 8px;\n  }\n\n  input {\n    padding: 10px 12px;\n  }\n\n  button {\n    padding: 10px 16px;\n  }\n}\n\n.ai-feedback-buttons {\n  display: flex;\n  gap: 8px;\n  margin-top: 8px;\n  align-items: center;\n}\n\n.ai-feedback-buttons button {\n  all: unset;\n  cursor: pointer;\n}\n\n.ai-feedback-buttons button:hover {\n  all: unset;\n  cursor: pointer;\n}\n\n/* Markdown content styles */\n.markdown-content {\n  line-height: 1.6;\n  color: inherit;\n}\n\n.markdown-content h1,\n.markdown-content h2,\n.markdown-content h3,\n.markdown-content h4,\n.markdown-content h5,\n.markdown-content h6 {\n  margin: 16px 0 8px 0;\n  font-weight: 600;\n  line-height: 1.3;\n}\n\n.markdown-content h1 {\n  font-size: 1.5em;\n}\n.markdown-content h2 {\n  font-size: 1.4em;\n}\n.markdown-content h3 {\n  font-size: 1.3em;\n}\n.markdown-content h4 {\n  font-size: 1.2em;\n}\n.markdown-content h5 {\n  font-size: 1.1em;\n}\n.markdown-content h6 {\n  font-size: 1em;\n}\n\n.markdown-content p {\n  margin: 8px 0;\n  line-height: 1.6;\n}\n\n.markdown-content ul,\n.markdown-content ol {\n  margin: 8px 0;\n  padding-left: 24px;\n}\n\n.markdown-content li {\n  margin: 4px 0;\n  line-height: 1.5;\n}\n\n.markdown-content blockquote {\n  margin: 12px 0;\n  padding: 8px 16px;\n  border-left: 4px solid var(--main-color);\n  background-color: rgba(255, 136, 52, 0.1);\n  border-radius: 4px;\n  font-style: italic;\n}\n\n.markdown-content code {\n  background-color: rgba(0, 0, 0, 0.1);\n  padding: 2px 6px;\n  border-radius: 3px;\n  font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;\n  font-size: 0.9em;\n}\n\n.markdown-content pre {\n  background-color: rgba(0, 0, 0, 0.1);\n  padding: 12px;\n  border-radius: 6px;\n  overflow-x: auto;\n  margin: 12px 0;\n}\n\n.markdown-content pre code {\n  background: none;\n  padding: 0;\n  border-radius: 0;\n}\n\n.markdown-content strong {\n  font-weight: 600;\n}\n\n.markdown-content em {\n  font-style: italic;\n}\n\n.markdown-content a {\n  color: var(--main-color);\n  text-decoration: none;\n}\n\n.markdown-content a:hover {\n  text-decoration: underline;\n}\n\n.markdown-content table {\n  border-collapse: collapse;\n  width: 100%;\n  margin: 12px 0;\n}\n\n.markdown-content th,\n.markdown-content td {\n  border: 1px solid #ddd;\n  padding: 8px 12px;\n  text-align: left;\n}\n\n.markdown-content th {\n  background-color: rgba(255, 136, 52, 0.1);\n  font-weight: 600;\n}\n\n.markdown-content hr {\n  border: none;\n  border-top: 1px solid #ddd;\n  margin: 16px 0;\n}\n\n.thumb-up,\n.thumb-down {\n  width: 16px;\n  height: 16px;\n}\n\n/* Skeleton */\n\n@keyframes shimmer {\n  0% {\n    background-position: -200px 0;\n  }\n  100% {\n    background-position: calc(200px + 100%) 0;\n  }\n}\n\n.skeleton-container {\n  position: relative;\n}\n\n.skeleton-line {\n  height: 14px;\n  background: linear-gradient(90deg, #e9ecef 25%, #f8f9fa 50%, #e9ecef 75%);\n  background-size: 200px 100%;\n  animation: shimmer 1.5s infinite linear;\n  border-radius: 4px;\n  margin-bottom: 8px;\n  position: relative;\n  overflow: hidden;\n}\n\n.skeleton-line:last-child {\n  margin-bottom: 0;\n}\n\n.skeleton-line.line-1 {\n  width: 95%;\n}\n\n.skeleton-line.line-2 {\n  width: 88%;\n}\n\n.skeleton-line.line-3 {\n  width: 72%;\n}\n\n.skeleton-avatar {\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  background: linear-gradient(90deg, #e9ecef 25%, #f8f9fa 50%, #e9ecef 75%);\n  background-size: 200px 100%;\n  animation: shimmer 1.5s infinite linear;\n  margin-bottom: 12px;\n  display: inline-block;\n}\n\n.skeleton-wrapper {\n  display: flex;\n  align-items: flex-start;\n  gap: 12px;\n}\n\n.skeleton-content {\n  flex: 1;\n}\n\n.skeleton-typing {\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  margin-top: 8px;\n}\n\n.skeleton-dot {\n  width: 6px;\n  height: 6px;\n  border-radius: 50%;\n  background-color: #6c757d;\n  animation: typing 1.4s infinite ease-in-out;\n}\n\n.skeleton-dot:nth-child(1) {\n  animation-delay: -0.32s;\n}\n.skeleton-dot:nth-child(2) {\n  animation-delay: -0.16s;\n}\n.skeleton-dot:nth-child(3) {\n  animation-delay: 0s;\n}\n\n@keyframes typing {\n  0%,\n  80%,\n  100% {\n    opacity: 0.3;\n    transform: scale(0.8);\n  }\n  40% {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n\n.skeleton-glow {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.4), transparent);\n  animation: glow 2s infinite;\n  border-radius: inherit;\n}\n\n@keyframes glow {\n  0% {\n    transform: translateX(-100%);\n  }\n  100% {\n    transform: translateX(100%);\n  }\n}\n","import { Component, Host, h, State, Prop, Env } from '@stencil/core';\nimport { TitleStyle } from './types';\nimport { generateConversationId } from '../../utils/utils';\nimport { callAIStream } from '../../utils/api-service';\nimport { marked } from 'marked';\n\n@Component({\n  tag: 'chat-modal',\n  styleUrl: 'chat-modal.css',\n  shadow: true,\n})\nexport class ChatModal {\n  @State() open = true;\n  @Prop() modalTitle: string = \"Que puis-je faire pour vous ?\";\n  @Prop() titleStyle: Partial<TitleStyle> = {};\n  @State() messages: { role: string; content: string; isComplete?: boolean }[] = [];\n  @State() isLoading: boolean = false;\n  @Prop() iconSize: number = 16;\n  @Prop() apiEndpoint: string = Env.API_URL;\n  @State() conversationId: string = '';\n\n  componentWillLoad() {\n    this.conversationId = generateConversationId();\n    console.log('Generated conversation ID:', this.conversationId);\n    this.loadFonts();\n\n    // Configure marked for safe rendering\n    marked.setOptions({\n      breaks: true, // Convert line breaks to <br>\n      gfm: true,    // GitHub Flavored Markdown\n    });\n  }\n\n  private loadFonts() {\n    const existingLink = document.querySelector('link[href*=\"fonts.googleapis.com/css2?family=Signika\"]');\n    if (!existingLink) {\n      const link = document.createElement('link');\n      link.rel = 'stylesheet';\n      link.href = 'https://fonts.googleapis.com/css2?family=Signika:wght@300..700&family=Yantramanav:wght@100;300;400;500;700;900&display=swap';\n      document.head.appendChild(link);\n    }\n  }\n\n  private closeModal = () => {\n    this.open = false;\n  };\n\n  private handleChunk = async (message: string) => {\n    try {\n      const aiMessageIndex = this.messages.length - 1;\n\n      await callAIStream(\n        message,\n        this.apiEndpoint,\n        this.conversationId,\n        (chunk: string) => {\n          this.messages = this.messages.map((msg, index) =>\n            index === aiMessageIndex\n              ? { ...msg, content: msg.content + chunk }\n              : msg\n          );\n        },\n        () => {\n          this.messages = this.messages.map((msg, index) =>\n            index === aiMessageIndex\n              ? { ...msg, isComplete: true }\n              : msg\n          );\n          this.isLoading = false;\n        },\n        (error: Error) => {\n          console.error('AI stream error:', error);\n          this.messages = this.messages.map((msg, index) =>\n            index === aiMessageIndex\n              ? { ...msg, content: 'Sorry, I encountered an error. Please try again.', isComplete: true }\n              : msg\n          );\n          this.isLoading = false;\n        }\n      );\n    } catch (error) {\n      console.error('Failed to call AI stream:', error);\n      const aiMessageIndex = this.messages.length - 1;\n      this.messages = this.messages.map((msg, index) =>\n        index === aiMessageIndex\n          ? { ...msg, content: 'Sorry, I encountered an error. Please try again.', isComplete: true }\n          : msg\n      );\n      this.isLoading = false;\n    }\n  };\n\n  private handleSubmit = async (e: Event) => {\n    e.preventDefault();\n    const form = e.target as HTMLFormElement;\n    const input = form.querySelector('input[name=\"message\"]') as HTMLInputElement;\n    const message = input.value;\n    this.messages.push({ role: 'user', content: message });\n    this.isLoading = true;\n    form.reset();\n    this.messages.push({ role: 'ai', content: '' });\n    await this.handleChunk(message);\n  };\n\n  private renderMarkdown(content: string): string {\n    try {\n      // Sanitize the content to prevent XSS attacks\n      const sanitizedContent = content\n        .replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi, '')\n        .replace(/<iframe\\b[^<]*(?:(?!<\\/iframe>)<[^<]*)*<\\/iframe>/gi, '')\n        .replace(/javascript:/gi, '')\n        .replace(/on\\w+\\s*=/gi, '');\n\n      // Handle both synchronous and asynchronous marked versions\n      const result = marked(sanitizedContent);\n      if (typeof result === 'string') {\n        return result;\n      } else {\n        // If it's a Promise, return a placeholder and handle it asynchronously\n        return sanitizedContent;\n      }\n    } catch (error) {\n      console.error('Error parsing markdown:', error);\n      // Fallback to plain text if markdown parsing fails\n      return content.replace(/</g, '&lt;').replace(/>/g, '&gt;');\n    }\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class={{ 'modal-overlay': true, visible: this.open }}>\n          <div class=\"chat-container\">\n            <div class=\"modal-header\">\n              <span class=\"modal-title\">{this.modalTitle}</span>\n              <button class=\"close-button\" onClick={this.closeModal} aria-label=\"Close\">&times;</button>\n            </div>\n            <div class=\"chat-content\">\n              <div class=\"message-container\">\n                {this.messages.map((message, index) => (\n                  <div\n                    key={index}\n                    class={{\n                      'message': true,\n                      'user-message': message.role === 'user',\n                      'ai-message': message.role === 'ai',\n                    }}\n                  >\n                    {message.role === 'ai' ? (\n                      <>\n                        {this.isLoading && message.content === '' ? (\n                          <chat-skeleton />\n                        ) : (\n                          <div class=\"markdown-content\" innerHTML={this.renderMarkdown(message.content)}></div>\n                        )}\n                        {message.isComplete && <satisfaction-buttons />}\n                      </>\n                    ) : (\n                      <p>{message.content}</p>\n                    )}\n                  </div>\n                ))}\n              </div>\n              <form class=\"input-container\" onSubmit={this.handleSubmit}>\n                <input\n                  name='message'\n                  type='text'\n                  placeholder='Tapez votre message ici...'\n                  disabled={this.isLoading}\n                />\n                <button\n                  type='submit'\n                  disabled={this.isLoading}\n                  class=\"send-button\"\n                >\n                  {this.isLoading ? 'Envoi...' : <svg xmlns=\"http://www.w3.org/2000/svg\" width={this.iconSize} height={this.iconSize} viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-send-horizontal-icon lucide-send-horizontal\"><path d=\"M3.714 3.048a.498.498 0 0 0-.683.627l2.843 7.627a2 2 0 0 1 0 1.396l-2.842 7.627a.498.498 0 0 0 .682.627l18-8.5a.5.5 0 0 0 0-.904z\" /><path d=\"M6 12h16\" /></svg>}\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n}\n\n@keyframes shimmer {\n  0% {\n    background-position: -200px 0;\n  }\n  100% {\n    background-position: calc(200px + 100%) 0;\n  }\n}\n\n.skeleton-container {\n  position: relative;\n}\n\n.skeleton-line {\n  height: 14px;\n  background: linear-gradient(90deg, #e9ecef 25%, #f8f9fa 50%, #e9ecef 75%);\n  background-size: 200px 100%;\n  animation: shimmer 1.5s infinite linear;\n  border-radius: 4px;\n  margin-bottom: 8px;\n  position: relative;\n  overflow: hidden;\n}\n\n.skeleton-line:last-child {\n  margin-bottom: 0;\n}\n\n.skeleton-line.line-1 {\n  width: 95%;\n}\n\n.skeleton-line.line-2 {\n  width: 88%;\n}\n\n.skeleton-line.line-3 {\n  width: 72%;\n}\n\n.skeleton-avatar {\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  background: linear-gradient(90deg, #e9ecef 25%, #f8f9fa 50%, #e9ecef 75%);\n  background-size: 200px 100%;\n  animation: shimmer 1.5s infinite linear;\n  margin-bottom: 12px;\n  display: inline-block;\n}\n\n.skeleton-wrapper {\n  display: flex;\n  align-items: flex-start;\n  gap: 12px;\n}\n\n.skeleton-content {\n  flex: 1;\n}\n\n.skeleton-typing {\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  margin-top: 8px;\n}\n\n.skeleton-dot {\n  width: 6px;\n  height: 6px;\n  border-radius: 50%;\n  background-color: #6c757d;\n  animation: typing 1.4s infinite ease-in-out;\n}\n\n.skeleton-dot:nth-child(1) {\n  animation-delay: -0.32s;\n}\n.skeleton-dot:nth-child(2) {\n  animation-delay: -0.16s;\n}\n.skeleton-dot:nth-child(3) {\n  animation-delay: 0s;\n}\n\n@keyframes typing {\n  0%,\n  80%,\n  100% {\n    opacity: 0.3;\n    transform: scale(0.8);\n  }\n  40% {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n\n.skeleton-glow {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.4), transparent);\n  animation: glow 2s infinite;\n  border-radius: inherit;\n}\n\n@keyframes glow {\n  0% {\n    transform: translateX(-100%);\n  }\n  100% {\n    transform: translateX(100%);\n  }\n}\n","import { Component, Host, h } from '@stencil/core';\n\n@Component({\n  tag: 'chat-skeleton',\n  styleUrl: 'chat-skeleton.css',\n  shadow: true,\n})\nexport class ChatSkeleton {\n  render() {\n    return (\n      <Host>\n        <div class='skeleton-container'>\n          <div class='skeleton-typing'>\n            <div class='skeleton-dot'></div>\n            <div class='skeleton-dot'></div>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n",":host {\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 20px;\n  --main-color: #ff8834;\n  font-family: 'Yantramanav', serif, Arial, sans-serif;\n}\n\n.chat-widget-container {\n  position: fixed;\n  bottom: 10vh;\n  right: 24px;\n  width: 350px;\n  background: white;\n  border-radius: 12px;\n  box-shadow: 0 2px 16px rgba(0, 0, 0, 0.15);\n  z-index: 999;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n}\n.chat-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 12px 16px;\n  border-bottom: 1px solid #eee;\n  background: var(--main-color);\n  color: white;\n  font-family: 'Signika', Arial, sans-serif;\n}\n.chat-title {\n  margin: 0;\n  font-size: 1.1rem;\n  font-weight: 600;\n}\n.close-button {\n  background: none;\n  border: none;\n  color: white;\n  font-size: 1.5rem;\n  cursor: pointer;\n}\n.message-container {\n  flex: 1;\n  padding: 16px;\n  overflow-y: scroll;\n  background: #f7fafc;\n  min-height: 250px;\n  max-height: 250px;\n}\n\n.message {\n  margin: 12px 0;\n  padding: 12px 16px;\n  border-radius: 12px;\n  max-width: 80%;\n  word-wrap: break-word;\n  line-height: 1.4;\n}\n\n.user-message {\n  background: linear-gradient(135deg, var(--main-color), #ff8834);\n  color: white;\n  margin-left: auto;\n  width: fit-content;\n  border-radius: 20px 20px 0px 20px;\n}\n\n.ai-message {\n  background: hsla(240, 6%, 90%, 0.5);\n  color: #333;\n  margin-right: auto;\n  width: fit-content;\n  border-radius: 20px 20px 20px 0px;\n}\n.typing-indicator {\n  min-height: 24px;\n  padding: 0 16px;\n  color: #888;\n  font-size: 0.9rem;\n}\n.input-container {\n  display: flex;\n  border-top: 1px solid #eee;\n  padding: 8px;\n  background: #fff;\n}\n.input {\n  flex: 1;\n  border: 1px solid #ccc;\n  border-radius: 6px;\n  padding: 8px;\n  font-size: 1rem;\n  margin-right: 8px;\n  font-family: 'Yantramanav', serif, Arial, sans-serif;\n}\n.send-button {\n  background: var(--main-color);\n  color: white;\n  border: none;\n  border-radius: 6px;\n  padding: 0 16px;\n  font-size: 1rem;\n  cursor: pointer;\n}\n.send-icon {\n  width: 20px;\n  height: 20px;\n  vertical-align: middle;\n}\n.chat-toggler {\n  position: fixed;\n  bottom: 24px;\n  right: 24px;\n  width: 56px;\n  height: 56px;\n  border-radius: 50%;\n  background: var(--main-color);\n  color: white;\n  border: none;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 2rem;\n  cursor: pointer;\n  z-index: 999;\n}\n.hide {\n  display: none;\n  opacity: 0;\n  z-index: -1;\n  transform: translateY(50%);\n}\n","import { Component, Env, h, Prop, State } from '@stencil/core';\nimport { callAIStream } from '../../utils/api-service';\nimport { generateConversationId } from '../../utils/utils';\n\n@Component({\n  tag: 'chat-widget',\n  styleUrl: 'chat-widget.css',\n  shadow: true,\n})\nexport class ChatWidget {\n  @State() messages: { role: string; content: string; isComplete?: boolean }[] = [];\n  @State() isLoading: boolean = false;\n  @State() isChatContainerVisible: boolean = true;\n  @Prop() apiEndpoint: string = Env.API_URL;\n  @State() conversationId: string = '';\n\n  private inputEl?: HTMLInputElement;\n\n  componentWillLoad() {\n    // Initialize conversation ID when component first loads\n    this.conversationId = generateConversationId();\n    console.log('Generated conversation ID:', this.conversationId);\n    this.loadFonts();\n  }\n\n  private loadFonts() {\n    // Check if fonts are already loaded to avoid duplicates\n    const existingLink = document.querySelector('link[href*=\"fonts.googleapis.com/css2?family=Signika\"]');\n    if (!existingLink) {\n      const link = document.createElement('link');\n      link.rel = 'stylesheet';\n      link.href = 'https://fonts.googleapis.com/css2?family=Signika:wght@300..700&family=Yantramanav:wght@100;300;400;500;700;900&display=swap';\n      document.head.appendChild(link);\n    }\n  }\n\n  private handleSubmit = async (e: Event) => {\n    e.preventDefault();\n    const input = this.inputEl;\n    if (!input || !input.value.trim()) return;\n    const message = input.value;\n    const userMessage = { role: 'user', content: message, isComplete: true };\n    this.messages = [...this.messages, userMessage];\n    input.value = '';\n    this.isLoading = true;\n    const aiMessageIndex = this.messages.length;\n    this.messages = [...this.messages, { role: 'ai', content: '', isComplete: false }];\n    try {\n      await callAIStream(\n        message,\n        this.apiEndpoint,\n        this.conversationId,\n        (chunk: string) => {\n          const newMessages = [...this.messages];\n          newMessages[aiMessageIndex].content += chunk;\n          this.messages = newMessages;\n        },\n        () => {\n          this.isLoading = false;\n          const newMessages = [...this.messages];\n          newMessages[aiMessageIndex].isComplete = true;\n          this.messages = newMessages;\n        },\n        () => {\n          const newMessages = [...this.messages];\n          newMessages[aiMessageIndex] = {\n            ...newMessages[aiMessageIndex],\n            content: 'Sorry, I encountered an error. Please try again.',\n            isComplete: true,\n          };\n          this.messages = newMessages;\n          this.isLoading = false;\n        }\n      );\n    } catch (error) {\n      const newMessages = [...this.messages];\n      newMessages[aiMessageIndex] = {\n        ...newMessages[aiMessageIndex],\n        content: 'Sorry, I encountered an error. Please try again.',\n        isComplete: true,\n      };\n      this.messages = newMessages;\n      this.isLoading = false;\n    }\n  };\n\n  private toggleChatContainer = () => {\n    this.isChatContainerVisible = !this.isChatContainerVisible;\n  };\n\n  private setInputRef = (el: HTMLInputElement) => {\n    this.inputEl = el;\n  };\n\n  render() {\n    return [\n      <div\n        class={{\n          'chat-widget-container': true,\n          'hide': !this.isChatContainerVisible,\n        }}\n      >\n        <div class=\"chat-header\">\n          <h3 class=\"chat-title\">Que puis-je faire pour vous ?</h3>\n          <button class=\"close-button\" onClick={this.toggleChatContainer}>×</button>\n        </div>\n        <div class=\"message-container\">\n          {this.messages.map((message, index) => (\n            <div\n              key={index}\n              class={{\n                'message': true,\n                'user-message': message.role === 'user',\n                'ai-message': message.role === 'ai',\n              }}\n            >\n              {message.role === 'ai' ? [\n                this.isLoading && message.content === '' ? <chat-skeleton /> : <span>{message.content}</span>,\n                message.isComplete && <satisfaction-buttons />,\n              ] : <span>{message.content}</span>}\n            </div>\n          ))}\n        </div>\n        {/* <div class=\"typing-indicator\">\n          {this.isLoading ? 'AI is typing...' : ''}\n        </div> */}\n        <form class=\"input-container\" onSubmit={this.handleSubmit}>\n          <input\n            type=\"text\"\n            placeholder=\"Type a message...\"\n            name=\"message\"\n            required\n            class=\"input\"\n            ref={this.setInputRef}\n          />\n          <button type=\"submit\" disabled={this.isLoading} class=\"send-button\">\n            {this.isLoading ? 'Envoi...' : (\n              <svg class=\"send-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"white\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><line x1=\"22\" y1=\"2\" x2=\"11\" y2=\"13\"></line><polygon points=\"22 2 15 22 11 13 2 9 22 2\"></polygon></svg>\n            )}\n          </button>\n        </form>\n      </div>,\n      <button\n        class=\"chat-toggler\"\n        onClick={this.toggleChatContainer}\n      >\n        <svg\n          xmlns='http://www.w3.org/2000/svg'\n          width='24'\n          height='24'\n          viewBox='0 0 24 24'\n          fill='none'\n          stroke='white'\n          stroke-width='2'\n          stroke-linecap='round'\n          stroke-linejoin='round'\n        >\n          <path d='M7.9 20A9 9 0 1 0 4 16.1L2 22Z' />\n        </svg>\n      </button>\n    ];\n  }\n}\n",":host {\n  display: block;\n}\n","import { Component, Host, h } from '@stencil/core';\n\n@Component({\n  tag: 'satisfaction-buttons',\n  styleUrl: 'satisfaction-buttons.css',\n  shadow: true,\n})\nexport class SatisfactionButtons {\n  render() {\n    return (\n      <Host>\n        <slot></slot>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}