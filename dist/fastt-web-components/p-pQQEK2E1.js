function e(){const e=Date.now();const t=Math.random().toString(36).substring(2,15);return`conv_${e}_${t}`}async function t(e,t,r,n,o,c){try{const s=await fetch(`${t}/stream-chat`,{method:"POST",headers:{"Content-Type":"application/json",Accept:"text/event-stream","Cache-Control":"no-cache"},body:JSON.stringify({message:e,conversation_id:r})});if(!s.ok){throw new Error(`API request failed: ${s.status} ${s.statusText}`)}const a=s.body?.getReader();const i=new TextDecoder;let f="";if(!a){throw new Error("Failed to get response reader")}while(true){const{done:e,value:t}=await a.read();if(e){f+=i.decode();const e=f.split("\n");for(const t of e){if(t.startsWith("data: ")){const e=t.slice(6);try{const t=JSON.parse(e);if(t.type==="end"&&t.status==="completed"){o?.();return}else if(t.type==="error"){c?.(new Error(t.error||"Unknown error"));return}else if(t.content){n(t.content)}else if(t.message){n(t.message)}else if(t.text){n(t.text)}}catch(t){if(e.trim()){n(e)}}}}o?.();break}f+=i.decode(t,{stream:true});let r=f.split("\n");f=r.pop()||"";for(const e of r){if(e.startsWith("data: ")){const t=e.slice(6);try{const e=JSON.parse(t);if(e.type==="end"&&e.status==="completed"){o?.();return}else if(e.type==="error"){c?.(new Error(e.error||"Unknown error"));return}else if(e.content){n(e.content)}else if(e.message){n(e.message)}else if(e.text){n(e.text)}}catch(e){if(t.trim()){n(t)}}}}}}catch(e){c?.(e)}}export{t as c,e as g};
//# sourceMappingURL=p-pQQEK2E1.js.map