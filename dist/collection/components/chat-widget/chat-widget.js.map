{"version":3,"file":"chat-widget.js","sourceRoot":"","sources":["../../../src/components/chat-widget/chat-widget.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Env, h, Prop, State } from '@stencil/core';\nimport { callAIStream } from '../../utils/api-service';\nimport { generateConversationId } from '../../utils/utils';\n\n@Component({\n  tag: 'chat-widget',\n  styleUrl: 'chat-widget.css',\n  shadow: true,\n})\nexport class ChatWidget {\n  @State() messages: { role: string; content: string; isComplete?: boolean }[] = [];\n  @State() isLoading: boolean = false;\n  @State() isChatContainerVisible: boolean = true;\n  @Prop() apiEndpoint: string = Env.API_URL;\n  @State() conversationId: string = '';\n\n  private inputEl?: HTMLInputElement;\n\n  componentWillLoad() {\n    // Initialize conversation ID when component first loads\n    this.conversationId = generateConversationId();\n    console.log('Generated conversation ID:', this.conversationId);\n    this.loadFonts();\n  }\n\n  private loadFonts() {\n    // Check if fonts are already loaded to avoid duplicates\n    const existingLink = document.querySelector('link[href*=\"fonts.googleapis.com/css2?family=Signika\"]');\n    if (!existingLink) {\n      const link = document.createElement('link');\n      link.rel = 'stylesheet';\n      link.href = 'https://fonts.googleapis.com/css2?family=Signika:wght@300..700&family=Yantramanav:wght@100;300;400;500;700;900&display=swap';\n      document.head.appendChild(link);\n    }\n  }\n\n  private handleSubmit = async (e: Event) => {\n    e.preventDefault();\n    const input = this.inputEl;\n    if (!input || !input.value.trim()) return;\n    const message = input.value;\n    const userMessage = { role: 'user', content: message, isComplete: true };\n    this.messages = [...this.messages, userMessage];\n    input.value = '';\n    this.isLoading = true;\n    const aiMessageIndex = this.messages.length;\n    this.messages = [...this.messages, { role: 'ai', content: '', isComplete: false }];\n    try {\n      await callAIStream(\n        message,\n        this.apiEndpoint,\n        this.conversationId,\n        (chunk: string) => {\n          const newMessages = [...this.messages];\n          newMessages[aiMessageIndex].content += chunk;\n          this.messages = newMessages;\n        },\n        () => {\n          this.isLoading = false;\n          const newMessages = [...this.messages];\n          newMessages[aiMessageIndex].isComplete = true;\n          this.messages = newMessages;\n        },\n        () => {\n          const newMessages = [...this.messages];\n          newMessages[aiMessageIndex] = {\n            ...newMessages[aiMessageIndex],\n            content: 'Sorry, I encountered an error. Please try again.',\n            isComplete: true,\n          };\n          this.messages = newMessages;\n          this.isLoading = false;\n        }\n      );\n    } catch (error) {\n      const newMessages = [...this.messages];\n      newMessages[aiMessageIndex] = {\n        ...newMessages[aiMessageIndex],\n        content: 'Sorry, I encountered an error. Please try again.',\n        isComplete: true,\n      };\n      this.messages = newMessages;\n      this.isLoading = false;\n    }\n  };\n\n  private toggleChatContainer = () => {\n    this.isChatContainerVisible = !this.isChatContainerVisible;\n  };\n\n  private setInputRef = (el: HTMLInputElement) => {\n    this.inputEl = el;\n  };\n\n  render() {\n    return [\n      <div\n        class={{\n          'chat-widget-container': true,\n          'hide': !this.isChatContainerVisible,\n        }}\n      >\n        <div class=\"chat-header\">\n          <h3 class=\"chat-title\">Que puis-je faire pour vous ?</h3>\n          <button class=\"close-button\" onClick={this.toggleChatContainer}>Ã—</button>\n        </div>\n        <div class=\"message-container\">\n          {this.messages.map((message, index) => (\n            <div\n              key={index}\n              class={{\n                'message': true,\n                'user-message': message.role === 'user',\n                'ai-message': message.role === 'ai',\n              }}\n            >\n              {message.role === 'ai' ? [\n                this.isLoading && message.content === '' ? <chat-skeleton /> : <span>{message.content}</span>,\n                message.isComplete && <satisfaction-buttons />,\n              ] : <span>{message.content}</span>}\n            </div>\n          ))}\n        </div>\n        {/* <div class=\"typing-indicator\">\n          {this.isLoading ? 'AI is typing...' : ''}\n        </div> */}\n        <form class=\"input-container\" onSubmit={this.handleSubmit}>\n          <input\n            type=\"text\"\n            placeholder=\"Type a message...\"\n            name=\"message\"\n            required\n            class=\"input\"\n            ref={this.setInputRef}\n          />\n          <button type=\"submit\" disabled={this.isLoading} class=\"send-button\">\n            {this.isLoading ? 'Envoi...' : (\n              <svg class=\"send-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"white\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><line x1=\"22\" y1=\"2\" x2=\"11\" y2=\"13\"></line><polygon points=\"22 2 15 22 11 13 2 9 22 2\"></polygon></svg>\n            )}\n          </button>\n        </form>\n      </div>,\n      <button\n        class=\"chat-toggler\"\n        onClick={this.toggleChatContainer}\n      >\n        <svg\n          xmlns='http://www.w3.org/2000/svg'\n          width='24'\n          height='24'\n          viewBox='0 0 24 24'\n          fill='none'\n          stroke='white'\n          stroke-width='2'\n          stroke-linecap='round'\n          stroke-linejoin='round'\n        >\n          <path d='M7.9 20A9 9 0 1 0 4 16.1L2 22Z' />\n        </svg>\n      </button>\n    ];\n  }\n}\n"]}